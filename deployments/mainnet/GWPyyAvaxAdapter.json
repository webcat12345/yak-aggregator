{
  "address": "0xFE163f7DB6674ae3Fed3f148B19483ca516565Fd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_portal",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pooledTknId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapGasEstimate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_adapter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newEstimate",
          "type": "uint256"
        }
      ],
      "name": "UpdatedGasEstimate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenFrom",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountOut",
          "type": "uint256"
        }
      ],
      "name": "YakAdapterSwap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gavax",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pooledTknId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pooledTknInterface",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "portal",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        }
      ],
      "name": "query",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "revokeAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setAllowances",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "interfaceAddress",
          "type": "address"
        }
      ],
      "name": "setInterfaceForPooledTkn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_estimate",
          "type": "uint256"
        }
      ],
      "name": "setSwapGasEstimate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountOut",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapGasEstimate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbca20c18366e0e445fdf94be14a6e4dcc00e086c85f8a15c4d84dcca44a2e1c0",
  "receipt": {
    "to": null,
    "from": "0xd22044706DeA3c342f68396bEDBCf6a2536d951D",
    "contractAddress": "0xFE163f7DB6674ae3Fed3f148B19483ca516565Fd",
    "transactionIndex": 0,
    "gasUsed": "1840018",
    "logsBloom": "0x
    "blockHash": "0xc016a1f0278702110db81d4dfce1c891e544b7a5c78f60536d1cb93e1130b869",
    "transactionHash": "0xbca20c18366e0e445fdf94be14a6e4dcc00e086c85f8a15c4d84dcca44a2e1c0",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 18068567,
        "transactionHash": "0xbca20c18366e0e445fdf94be14a6e4dcc00e086c85f8a15c4d84dcca44a2e1c0",
        "address": "0xFE163f7DB6674ae3Fed3f148B19483ca516565Fd",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d22044706dea3c342f68396bedbcf6a2536d951d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc016a1f0278702110db81d4dfce1c891e544b7a5c78f60536d1cb93e1130b869"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18068567,
        "transactionHash": "0xbca20c18366e0e445fdf94be14a6e4dcc00e086c85f8a15c4d84dcca44a2e1c0",
        "address": "0xFE163f7DB6674ae3Fed3f148B19483ca516565Fd",
        "topics": [
          "0xf43f23b7a28e6f8ce6843a21bd7b48bce778aa913b8c8cf459edf7d770e8d38a",
          "0x000000000000000000000000fe163f7db6674ae3fed3f148b19483ca516565fd"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000006ddd0",
        "logIndex": 1,
        "blockHash": "0xc016a1f0278702110db81d4dfce1c891e544b7a5c78f60536d1cb93e1130b869"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18068567,
        "transactionHash": "0xbca20c18366e0e445fdf94be14a6e4dcc00e086c85f8a15c4d84dcca44a2e1c0",
        "address": "0x6026a85e11BD895c934Af02647E8C7b4Ea2D9808",
        "topics": [
          "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
          "0x000000000000000000000000fe163f7db6674ae3fed3f148b19483ca516565fd",
          "0x000000000000000000000000a974de60871907aafe3a4634766adb40df461c16"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 2,
        "blockHash": "0xc016a1f0278702110db81d4dfce1c891e544b7a5c78f60536d1cb93e1130b869"
      }
    ],
    "blockNumber": 18068567,
    "cumulativeGasUsed": "1840018",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "GWPyyAvaxAdapter",
    "0x4fe8C658f268842445Ae8f95D4D6D8Cfd356a8C8",
    "0x65293248ac7dc05120c6bee23cd982992894bed99a7f0b75c2c5b011ef1e4f38",
    450000
  ],
  "solcInputHash": "68ff6732b09e918771e28011c69c4646",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_portal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pooledTknId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapGasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_adapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newEstimate\",\"type\":\"uint256\"}],\"name\":\"UpdatedGasEstimate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"YakAdapterSwap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gavax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pooledTknId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pooledTknInterface\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"portal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"query\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"revokeAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAllowances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"interfaceAddress\",\"type\":\"address\"}],\"name\":\"setInterfaceForPooledTkn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_estimate\",\"type\":\"uint256\"}],\"name\":\"setSwapGasEstimate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapGasEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverAVAX(uint256)\":{\"params\":{\"_amount\":\"amount\"}},\"recoverERC20(address,uint256)\":{\"params\":{\"_tokenAddress\":\"token address\",\"_tokenAmount\":\"amount to recover\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeAllowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_token\":\"address\"}},\"setAllowances()\":{\"details\":\"Should use modifier `onlyOwner` to avoid griefing\"},\"swap(uint256,uint256,address,address,address)\":{\"params\":{\"_amountIn\":\"input amount in starting token\",\"_amountOut\":\"amount out in ending token\",\"_fromToken\":\"ERC20 token being sold\",\"_to\":\"address where swapped funds should be sent to\",\"_toToken\":\"ERC20 token being bought\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recoverAVAX(uint256)\":{\"notice\":\"Recover AVAX from contract\"},\"recoverERC20(address,uint256)\":{\"notice\":\"Recover ERC20 from contract\"},\"revokeAllowance(address,address)\":{\"notice\":\"Revoke token allowance\"},\"setAllowances()\":{\"notice\":\"Approve tokens for use in Strategy\"},\"swap(uint256,uint256,address,address,address)\":{\"notice\":\"Execute a swap from token to token assuming this contract already holds input tokensInteract through the router\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/GeodeWPAdapter.sol\":\"GeodeWPAdapter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/YakAdapter.sol\":{\"content\":\"//       \\u255f\\u2557                                                                      \\u2554\\u256c\\n//       \\u255e\\u256c\\u256c                                                                    \\u256c\\u2560\\u256c\\n//      \\u2554\\u2563\\u256c\\u256c\\u256c                                                                  \\u2560\\u2560\\u2560\\u2560\\u2566\\n//     \\u256c\\u256c\\u256c\\u256c\\u256c\\u2569                                                                  \\u2558\\u2560\\u2560\\u2560\\u2560\\u256c\\n//    \\u2551\\u256c\\u256c\\u256c\\u256c\\u256c                                                                    \\u2558\\u2560\\u2560\\u2560\\u2560\\u256c\\n//    \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c      \\u2552\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u255c   \\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c         \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\n//    \\u2559\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2555    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u255c   \\u2563\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c        \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c   \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2569\\n//     \\u2559\\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c  \\u2554\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2554\\u2560\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c        \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u255d\\u2559\\n//               \\u2558\\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2552\\u2560\\u2560\\u2560\\u256c\\u2560\\u256c\\u2569\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c       \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2559\\n//                 \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2563     \\u2563\\u256c\\u2560\\u2560\\u2560\\u256c\\u2569 \\u255a\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c      \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                  \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2563     \\u2563\\u256c\\u2560\\u2560\\u2560\\u256c\\u256c   \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                   \\u255f\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2569      \\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u2552\\u256c\\u256c\\u2560\\u2560\\u256c\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u255d\\u255d\\u255d\\u255d\\u255d\\u255d\\u255d\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c   \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c  \\u255a\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2563\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2569       \\u2558\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c  \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c   \\u2559\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                              \\n\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.0;\\n\\nimport \\\"./interface/IERC20.sol\\\";\\nimport \\\"./interface/IWETH.sol\\\";\\nimport \\\"./lib/SafeERC20.sol\\\";\\nimport \\\"./lib/Ownable.sol\\\";\\n\\nabstract contract YakAdapter is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    event YakAdapterSwap(\\n        address indexed _tokenFrom, \\n        address indexed _tokenTo, \\n        uint _amountIn, \\n        uint _amountOut\\n    );\\n\\n    event UpdatedGasEstimate(\\n        address indexed _adapter,\\n        uint _newEstimate\\n    );\\n\\n    event Recovered(\\n        address indexed _asset, \\n        uint amount\\n    );\\n\\n    address internal constant WAVAX = 0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7;\\n    address internal constant AVAX = address(0);\\n    uint internal constant UINT_MAX = type(uint).max;\\n\\n    uint public swapGasEstimate;\\n    string public name;\\n\\n    function setSwapGasEstimate(uint _estimate) public onlyOwner {\\n        swapGasEstimate = _estimate;\\n        emit UpdatedGasEstimate(address(this), _estimate);\\n    }\\n\\n    /**\\n     * @notice Revoke token allowance\\n     * @param _token address\\n     * @param _spender address\\n     */\\n    function revokeAllowance(address _token, address _spender) external onlyOwner {\\n        IERC20(_token).safeApprove(_spender, 0);\\n    }\\n\\n    /**\\n     * @notice Recover ERC20 from contract\\n     * @param _tokenAddress token address\\n     * @param _tokenAmount amount to recover\\n     */\\n    function recoverERC20(address _tokenAddress, uint _tokenAmount) external onlyOwner {\\n        require(_tokenAmount > 0, 'YakAdapter: Nothing to recover');\\n        IERC20(_tokenAddress).safeTransfer(msg.sender, _tokenAmount);\\n        emit Recovered(_tokenAddress, _tokenAmount);\\n    }\\n\\n    /**\\n     * @notice Recover AVAX from contract\\n     * @param _amount amount\\n     */\\n    function recoverAVAX(uint _amount) external onlyOwner {\\n        require(_amount > 0, 'YakAdapter: Nothing to recover');\\n        payable(msg.sender).transfer(_amount);\\n        emit Recovered(address(0), _amount);\\n    }\\n\\n    function query(\\n        uint _amountIn, \\n        address _tokenIn, \\n        address _tokenOut\\n    ) external view returns (uint) {\\n        return _query(\\n            _amountIn, \\n            _tokenIn, \\n            _tokenOut\\n        );\\n    }\\n\\n    /**\\n     * Execute a swap from token to token assuming this contract already holds input tokens\\n     * @notice Interact through the router\\n     * @param _amountIn input amount in starting token\\n     * @param _amountOut amount out in ending token\\n     * @param _fromToken ERC20 token being sold\\n     * @param _toToken ERC20 token being bought\\n     * @param _to address where swapped funds should be sent to\\n     */\\n    function swap(\\n        uint _amountIn, \\n        uint _amountOut,\\n        address _fromToken, \\n        address _toToken, \\n        address _to\\n    ) external {\\n        _approveIfNeeded(_fromToken, _amountIn);\\n        _swap(_amountIn, _amountOut, _fromToken, _toToken, _to);\\n        emit YakAdapterSwap(\\n            _fromToken, \\n            _toToken,\\n            _amountIn, \\n            _amountOut \\n        );\\n    } \\n\\n    /**\\n     * @notice Return expected funds to user\\n     * @dev Skip if funds should stay in the contract\\n     * @param _token address\\n     * @param _amount tokens to return\\n     * @param _to address where funds should be sent to\\n     */\\n    function _returnTo(address _token, uint _amount, address _to) internal {\\n        if (address(this)!=_to) {\\n            IERC20(_token).safeTransfer(_to, _amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Wrap AVAX\\n     * @param _amount amount\\n     */\\n    function _wrap(uint _amount) internal {\\n        IWETH(WAVAX).deposit{value: _amount}();\\n    }\\n\\n    /**\\n     * @notice Unwrap WAVAX\\n     * @param _amount amount\\n     */\\n    function _unwrap(uint _amount) internal {\\n        IWETH(WAVAX).withdraw(_amount);\\n    }\\n\\n    /**\\n     * @notice Internal implementation of a swap\\n     * @dev Must return tokens to address(this)\\n     * @dev Wrapping is handled external to this function\\n     * @param _amountIn amount being sold\\n     * @param _amountOut amount being bought\\n     * @param _fromToken ERC20 token being sold\\n     * @param _toToken ERC20 token being bought\\n     * @param _to Where recieved tokens are sent to\\n     */\\n    function _swap(\\n        uint _amountIn, \\n        uint _amountOut, \\n        address _fromToken, \\n        address _toToken, \\n        address _to\\n    ) internal virtual;\\n\\n    function _query(\\n        uint _amountIn,\\n        address _tokenIn, \\n        address _tokenOut\\n    ) internal virtual view returns (uint);\\n\\n    /**\\n     * @notice Approve tokens for use in Strategy\\n     * @dev Should use modifier `onlyOwner` to avoid griefing\\n     */\\n    function setAllowances() public virtual;\\n\\n    function _approveIfNeeded(address _tokenIn, uint _amount) internal virtual;\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x8640baef184d9eec0190581dd4e19ee3c0aea5df1a8c0084694ac194900527fd\",\"license\":\"GPL-3.0-only\"},\"contracts/adapters/GeodeWPAdapter.sol\":{\"content\":\"//       \\u255f\\u2557                                                                      \\u2554\\u256c\\n//       \\u255e\\u256c\\u256c                                                                    \\u256c\\u2560\\u256c\\n//      \\u2554\\u2563\\u256c\\u256c\\u256c                                                                  \\u2560\\u2560\\u2560\\u2560\\u2566\\n//     \\u256c\\u256c\\u256c\\u256c\\u256c\\u2569                                                                  \\u2558\\u2560\\u2560\\u2560\\u2560\\u256c\\n//    \\u2551\\u256c\\u256c\\u256c\\u256c\\u256c                                                                    \\u2558\\u2560\\u2560\\u2560\\u2560\\u256c\\n//    \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c      \\u2552\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u255c   \\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c         \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\n//    \\u2559\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2555    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u255c   \\u2563\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c        \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c   \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2560\\u2569\\n//     \\u2559\\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c  \\u2554\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2554\\u2560\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c        \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u255d\\u2559\\n//               \\u2558\\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2552\\u2560\\u2560\\u2560\\u256c\\u2560\\u256c\\u2569\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c       \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2559\\n//                 \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u2563     \\u2563\\u256c\\u2560\\u2560\\u2560\\u256c\\u2569 \\u255a\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c      \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                  \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2563     \\u2563\\u256c\\u2560\\u2560\\u2560\\u256c\\u256c   \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                   \\u255f\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2569      \\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u2552\\u256c\\u256c\\u2560\\u2560\\u256c\\u2560\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c \\u2563\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c     \\u256c\\u256c\\u256c\\u2560\\u2560\\u2560\\u2560\\u255d\\u255d\\u255d\\u255d\\u255d\\u255d\\u255d\\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c   \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c  \\u255a\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                    \\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c    \\u2563\\u256c\\u256c\\u256c\\u256c\\u2560\\u2560\\u2569       \\u2558\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c  \\u2560\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c   \\u2559\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\u256c\\n//                              \\n\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.0;\\n\\nimport \\\"../interface/IGeodePortal.sol\\\";\\nimport \\\"../interface/IGeodeWP.sol\\\";\\nimport \\\"../interface/IgAVAX.sol\\\";\\nimport \\\"../interface/IERC20.sol\\\";\\nimport \\\"../interface/IWETH.sol\\\";\\nimport \\\"../YakAdapter.sol\\\";\\n\\ncontract GeodeWPAdapter is YakAdapter {\\n\\n    bytes32 constant id = keccak256(\\\"GeodeWPAdapter\\\");\\n    uint constant gAVAX_DENOMINATOR = 1e18;\\n    uint constant IGNORABLE_DEBT = 1e18;\\n\\n    uint public pooledTknId;\\n    address public pooledTknInterface;\\n    address public portal;\\n    address public gavax;\\n    address public pool;\\n\\n    constructor (\\n        string memory _name, \\n        address _portal,\\n        uint _pooledTknId,\\n        uint _swapGasEstimate\\n    ) {\\n        pooledTknId = _pooledTknId;\\n        portal = _portal;\\n        name = _name;\\n        pooledTknInterface = IGeodePortal(_portal).planetCurrentInterface(\\n            pooledTknId\\n        );\\n        pool = IGeodePortal(_portal).planetWithdrawalPool(pooledTknId);\\n        gavax = IGeodePortal(_portal).gAVAX();\\n        setSwapGasEstimate(_swapGasEstimate);\\n        setAllowances();\\n    }\\n\\n    function setInterfaceForPooledTkn(\\n        address interfaceAddress\\n    ) public onlyOwner {\\n        require(\\n            IgAVAX(gavax).isInterface(\\n                interfaceAddress, \\n                pooledTknId\\n            ), \\n            \\\"Not interface for the pooled token\\\"\\n        );\\n        pooledTknInterface = interfaceAddress;\\n    }\\n\\n    function onERC1155Received(\\n        address, \\n        address, \\n        uint256, \\n        uint256, \\n        bytes memory\\n    ) public virtual returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function setAllowances() public override onlyOwner {\\n        IgAVAX(gavax).setApprovalForAll(pool, true);\\n    }\\n\\n    function revokeAllowance() public onlyOwner {\\n        IgAVAX(gavax).setApprovalForAll(pool, false);\\n    }\\n\\n    function _supportedTokens(\\n        address tknIn, \\n        address tknOut\\n    ) internal view returns (bool) {\\n        return (tknOut == WAVAX && tknIn == pooledTknInterface)\\n            || (tknIn == WAVAX && tknOut == pooledTknInterface);\\n    }\\n\\n    function _stakingPaused() internal view returns (bool) {\\n        return IGeodePortal(portal).isStakingPausedForPool(pooledTknId);\\n    }\\n\\n    function _calcSwap(\\n        uint8 tknInIndex,\\n        uint8 tknOutIndex,\\n        uint amountIn\\n    ) internal view returns (uint) {\\n        try IGeodeWP(pool).calculateSwap(\\n            tknInIndex, \\n            tknOutIndex, \\n            amountIn\\n        ) returns (uint amountOut) {\\n            return amountOut;\\n        } catch {\\n            return 0;\\n        }\\n    }\\n\\n    function _calculateMint(uint amountIn) internal view returns (uint) {\\n        uint price = IgAVAX(gavax).pricePerShare(pooledTknId);\\n        return amountIn * gAVAX_DENOMINATOR / price;\\n    }\\n\\n    function _calcSwapAndMint(uint amountIn) internal view returns (uint) {\\n        uint debt = IGeodeWP(pool).getDebt();\\n        if (debt >= amountIn || _stakingPaused()) {\\n            // If pool is unbalanced and missing avax it's cheaper to swap\\n            return _calcSwap(0, 1, amountIn);\\n        } else {\\n            // Swap debt and mint the rest\\n            uint amountOutBought;\\n            if (debt > IGNORABLE_DEBT) {\\n                amountOutBought = _calcSwap(0, 1, debt);\\n                amountIn -= debt;\\n            }\\n            uint amountOutMinted = _calculateMint(amountIn);\\n            return amountOutBought + amountOutMinted;\\n        }\\n    }\\n\\n    function _query(\\n        uint _amountIn, \\n        address _tokenIn, \\n        address _tokenOut\\n    ) internal override view returns (uint) {\\n        if (_amountIn == 0 || _tokenIn == _tokenOut || IGeodeWP(pool).paused())\\n            return 0;\\n        if (_tokenIn == WAVAX && _tokenOut == pooledTknInterface)\\n            return _calcSwapAndMint(_amountIn);\\n        if (_tokenOut == WAVAX && _tokenIn == pooledTknInterface)\\n            return _calcSwap(1, 0, _amountIn);\\n    }\\n\\n    function _swapUnderlying(\\n        uint8 _tokenInIndex,\\n        uint8 _tokenOutIndex,\\n        uint _amountIn, \\n        uint _amountOut,\\n        uint _val\\n    ) internal {        \\n        IGeodeWP(pool).swap{ value: _val }(\\n            _tokenInIndex, \\n            _tokenOutIndex,\\n            _amountIn, \\n            _amountOut, \\n            block.timestamp\\n        );\\n    }\\n\\n    function _geodeStake(\\n        uint _amountIn, \\n        uint _amountOut\\n    ) internal {\\n        IGeodePortal(portal).stake{ value: _amountIn }(\\n            pooledTknId, \\n            _amountOut, \\n            block.timestamp\\n        );\\n    }\\n\\n    function _swap(\\n        uint _amountIn, \\n        uint _amountOut, \\n        address _tokenIn, \\n        address _tokenOut, \\n        address _to\\n    ) internal override {\\n        if (_tokenIn == WAVAX) {\\n            IWETH(WAVAX).withdraw(_amountIn);\\n            if (_stakingPaused())\\n                _swapUnderlying(0, 1, _amountIn, _amountOut, _amountIn);\\n            else \\n                _geodeStake(_amountIn, _amountOut);\\n        } else {\\n            _swapUnderlying(1, 0, _amountIn, _amountOut, 0);\\n            IWETH(WAVAX).deposit{ value: address(this).balance }();\\n        }\\n        _returnTo(_tokenOut, IERC20(_tokenOut).balanceOf(address(this)), _to);\\n    }\\n\\n    function _approveIfNeeded(address, uint) internal override {}\\n\\n}\",\"keccak256\":\"0x2b3c74fcbb185288a9e89c8bcf8f268a1a6ac25a88f8aac2c37092790a304c1e\",\"license\":\"GPL-3.0-only\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface IERC20 {\\n    event Approval(address,address,uint);\\n    event Transfer(address,address,uint);\\n    function name() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function transferFrom(address,address,uint) external returns (bool);\\n    function allowance(address,address) external view returns (uint);\\n    function approve(address,uint) external returns (bool);\\n    function transfer(address,uint) external returns (bool);\\n    function balanceOf(address) external view returns (uint);\\n    function nonces(address) external view returns (uint);  // Only tokens that support permit\\n    function permit(address,address,uint256,uint256,uint8,bytes32,bytes32) external;  // Only tokens that support permit\\n    function swap(address,uint256) external;  // Only Avalanche bridge tokens \\n    function swapSupply(address) external view returns (uint);  // Only Avalanche bridge tokens \\n}\",\"keccak256\":\"0xc71d31ef4f838908478ceb97d1ba0d95c4046393bd1cf26d6079d57d7c094e8d\",\"license\":\"MIT\"},\"contracts/interface/IGeodePortal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.7.0;\\n\\ninterface IGeodePortal {\\n\\n  function gAVAX() external view returns (address);\\n  function getNameFromId(uint256 _id) external view returns (bytes memory);\\n  function planetCurrentInterface(uint256 _id) external view returns (address);\\n  function planetWithdrawalPool(uint256 _id) external view returns (address);\\n  function getMaintainerFromId(uint256) external view returns (address);\\n  function isStakingPausedForPool(uint) external view returns (bool);\\n\\n  function unpauseStakingForPool(uint) external;\\n  function pauseStakingForPool(uint) external;\\n  function stake(\\n    uint256 planetId,\\n    uint256 minGavax,\\n    uint256 deadline\\n  ) external payable returns (uint256 totalgAvax);\\n}\",\"keccak256\":\"0x54e28425157b66d72b5a573a715dad701395bad686609bccaa8ae820e6b5de65\",\"license\":\"MIT\"},\"contracts/interface/IGeodeWP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.7.0;\\n\\ninterface IGeodeWP {\\n\\n  function paused() external view returns (bool);\\n  function getDebt() external view returns (uint);\\n  function getToken() external view returns (uint256);\\n  function getERC1155() external view returns (address);\\n  function getTokenBalance(uint8) external view returns (uint256);\\n\\n  function calculateSwap(\\n    uint8 tokenIndexFrom,\\n    uint8 tokenIndexTo,\\n    uint256 dx\\n  ) external view returns (uint256);\\n\\n  function swap(\\n    uint8 tokenIndexFrom,\\n    uint8 tokenIndexTo,\\n    uint256 dx,\\n    uint256 minDy,\\n    uint256 deadline\\n  ) external payable returns (uint256);\\n\\n  function addLiquidity(\\n    uint256[] calldata amounts,\\n    uint256 minToMint,\\n    uint256 deadline\\n  ) external payable;\\n\\n}\",\"keccak256\":\"0xafd7ca1a7bb558907acf7803b50733bb06bb5ff252f81e1ffe322cc603ad95c3\",\"license\":\"MIT\"},\"contracts/interface/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function withdraw(uint256 amount) external;\\n    function deposit() external payable;\\n}\",\"keccak256\":\"0xaff69efb1b24f6448740e4c71a16d86eedcd2407606ac449dd09dad5043b7923\",\"license\":\"MIT\"},\"contracts/interface/IgAVAX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\n// @note: operator stands for interface address \\ninterface IgAVAX {\\n\\n  function setApprovalForAll(address operator, bool approved) external;\\n  function pricePerShare(uint256 _id) external view returns (uint256);\\n  \\n  function balanceOf(\\n    address account, \\n    uint256 id\\n  ) external view returns (uint256);\\n\\n  function isInterface(address operator, uint256 id)\\n    external\\n    view\\n    returns (bool);\\n\\n  function isApprovedForAll(address account, address operator)\\n    external\\n    view\\n    returns (bool);\\n\\n}\",\"keccak256\":\"0x6e26e940a709484eff1539741e456dc63c655f9116f45ed1c9fb255772de100e\",\"license\":\"MIT\"},\"contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return payable(msg.sender);\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8b25f8514264f6d0ed4279a311d1be64012183292b1e7d6707107928dbac1142\",\"license\":\"MIT\"},\"contracts/lib/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.7.0;\\n\\nimport \\\"./Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: Caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: New owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1331d91852367ea5319eed242ef8ebbf245a0271f2b19093f5521ae206c9a1b3\",\"license\":\"MIT\"},\"contracts/lib/SafeERC20.sol\":{\"content\":\"// This is a simplified version of OpenZepplin's SafeERC20 library\\n// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../interface/IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves.\\n\\n        // A Solidity high level call has three parts:\\n        //  1. The target address is checked to verify it contains contract code\\n        //  2. The call itself is made, and success asserted\\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\\n        // solhint-disable-next-line max-line-length\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\",\"keccak256\":\"0x95e46e79b970b6e35511a773d310d63d7de30a5314e9bbfc4d8b465acec6f521\",\"license\":\"MIT\"},\"contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\\n\\nlibrary SafeMath {\\n    function add(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x + y) >= x, 'SafeMath: ds-math-add-overflow');\\n    }\\n\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x - y) <= x, 'SafeMath: ds-math-sub-underflow');\\n    }\\n\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\n        require(y == 0 || (z = x * y) / y == x, 'SafeMath: ds-math-mul-overflow');\\n    }\\n}\",\"keccak256\":\"0xee319854a4e682f8fab4f0404aa9604c9eea8190f6ec72c9cc67f25785b3ae01\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200217538038062002175833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604090815260208201519082015160609092015190935090915060006200010d62000353565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506003829055600580546001600160a01b0319166001600160a01b03851617905583516200018c906002906020870190620004e8565b50826001600160a01b031663c50daead6003546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620001d457600080fd5b505afa158015620001e9573d6000803e3d6000fd5b505050506040513d60208110156200020057600080fd5b5051600480546001600160a01b0319166001600160a01b0392831617815560035460408051636c8b02f760e01b8152928301919091525191851691636c8b02f791602480820192602092909190829003018186803b1580156200026257600080fd5b505afa15801562000277573d6000803e3d6000fd5b505050506040513d60208110156200028e57600080fd5b5051600780546001600160a01b0319166001600160a01b039283161790556040805163209899e760e11b815290519185169163413133ce91600480820192602092909190829003018186803b158015620002e757600080fd5b505afa158015620002fc573d6000803e3d6000fd5b505050506040513d60208110156200031357600080fd5b5051600680546001600160a01b0319166001600160a01b039092169190911790556200033f8162000357565b62000349620003fd565b5050505062000594565b3390565b6200036162000353565b6001600160a01b031662000374620004d9565b6001600160a01b031614620003bf576040805162461bcd60e51b8152602060048201819052602482015260008051602062002155833981519152604482015290519081900360640190fd5b600181905560408051828152905130917ff43f23b7a28e6f8ce6843a21bd7b48bce778aa913b8c8cf459edf7d770e8d38a919081900360200190a250565b6200040762000353565b6001600160a01b03166200041a620004d9565b6001600160a01b03161462000465576040805162461bcd60e51b8152602060048201819052602482015260008051602062002155833981519152604482015290519081900360640190fd5b6006546007546040805163a22cb46560e01b81526001600160a01b039283166004820152600160248201529051919092169163a22cb46591604480830192600092919082900301818387803b158015620004be57600080fd5b505af1158015620004d3573d6000803e3d6000fd5b50505050565b6000546001600160a01b031690565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200052057600085556200056b565b82601f106200053b57805160ff19168380011785556200056b565b828001600101855582156200056b579182015b828111156200056b5782518255916020019190600101906200054e565b50620005799291506200057d565b5090565b5b808211156200057957600081556001016200057e565b611bb180620005a46000396000f3fe6080604052600436106101635760003560e01c806384a33e63116100c0578063eab90da611610074578063f101ec3211610059578063f101ec3214610473578063f23a6e6114610488578063f2fde38b146105955761016a565b8063eab90da6146103e1578063ef99893a146104325761016a565b80638da5cb5b116100a55780638da5cb5b14610384578063dbd9a4d414610399578063e52eb3db146103ae5761016a565b806384a33e63146103215780638980f11f1461034b5761016a565b806369cff80d116101175780637ae26773116100fc5780637ae26773146102bc5780637b067076146102f75780638408f4991461030c5761016a565b806369cff80d14610280578063715018a6146102a75761016a565b8063311c65e011610148578063311c65e01461022a5780634ebb7916146102415780636425666b1461026b5761016a565b806306fdde031461016f57806316f0115b146101f95761016a565b3661016a57005b600080fd5b34801561017b57600080fd5b506101846105c8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101be5781810151838201526020016101a6565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020557600080fd5b5061020e610653565b604080516001600160a01b039092168252519081900360200190f35b34801561023657600080fd5b5061023f610662565b005b34801561024d57600080fd5b5061023f6004803603602081101561026457600080fd5b5035610746565b34801561027757600080fd5b5061020e610877565b34801561028c57600080fd5b50610295610886565b60408051918252519081900360200190f35b3480156102b357600080fd5b5061023f61088c565b3480156102c857600080fd5b5061023f600480360360408110156102df57600080fd5b506001600160a01b0381358116916020013516610957565b34801561030357600080fd5b5061020e6109e4565b34801561031857600080fd5b5061020e6109f3565b34801561032d57600080fd5b5061023f6004803603602081101561034457600080fd5b5035610a02565b34801561035757600080fd5b5061023f6004803603604081101561036e57600080fd5b506001600160a01b038135169060200135610ab4565b34801561039057600080fd5b5061020e610bd4565b3480156103a557600080fd5b5061023f610be3565b3480156103ba57600080fd5b5061023f600480360360208110156103d157600080fd5b50356001600160a01b0316610caf565b3480156103ed57600080fd5b5061023f600480360360a081101561040457600080fd5b508035906020810135906001600160a01b036040820135811691606081013582169160809091013516610e2a565b34801561043e57600080fd5b506102956004803603606081101561045557600080fd5b508035906001600160a01b0360208201358116916040013516610e9b565b34801561047f57600080fd5b50610295610eb2565b34801561049457600080fd5b50610560600480360360a08110156104ab57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156104eb57600080fd5b8201836020820111156104fd57600080fd5b8035906020019184600183028401116401000000008311171561051f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610eb8945050505050565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b3480156105a157600080fd5b5061023f600480360360208110156105b857600080fd5b50356001600160a01b0316610ee2565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b505050505081565b6007546001600160a01b031681565b61066a611003565b6001600160a01b031661067b610bd4565b6001600160a01b0316146106d6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6006546007546040805163a22cb46560e01b81526001600160a01b0392831660048201526000602482018190529151929093169263a22cb465926044808301939282900301818387803b15801561072c57600080fd5b505af1158015610740573d6000803e3d6000fd5b50505050565b61074e611003565b6001600160a01b031661075f610bd4565b6001600160a01b0316146107ba576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000811161080f576040805162461bcd60e51b815260206004820152601e60248201527f59616b416461707465723a204e6f7468696e6720746f207265636f7665720000604482015290519081900360640190fd5b604051339082156108fc029083906000818181858888f1935050505015801561083c573d6000803e3d6000fd5b506040805182815290516000917f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28919081900360200190a250565b6005546001600160a01b031681565b60015481565b610894611003565b6001600160a01b03166108a5610bd4565b6001600160a01b031614610900576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b61095f611003565b6001600160a01b0316610970610bd4565b6001600160a01b0316146109cb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6109e06001600160a01b038316826000611007565b5050565b6006546001600160a01b031681565b6004546001600160a01b031681565b610a0a611003565b6001600160a01b0316610a1b610bd4565b6001600160a01b031614610a76576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600181905560408051828152905130917ff43f23b7a28e6f8ce6843a21bd7b48bce778aa913b8c8cf459edf7d770e8d38a919081900360200190a250565b610abc611003565b6001600160a01b0316610acd610bd4565b6001600160a01b031614610b28576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008111610b7d576040805162461bcd60e51b815260206004820152601e60248201527f59616b416461707465723a204e6f7468696e6720746f207265636f7665720000604482015290519081900360640190fd5b610b916001600160a01b0383163383611155565b6040805182815290516001600160a01b038416917f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28919081900360200190a25050565b6000546001600160a01b031690565b610beb611003565b6001600160a01b0316610bfc610bd4565b6001600160a01b031614610c57576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6006546007546040805163a22cb46560e01b81526001600160a01b039283166004820152600160248201529051919092169163a22cb46591604480830192600092919082900301818387803b15801561072c57600080fd5b610cb7611003565b6001600160a01b0316610cc8610bd4565b6001600160a01b031614610d23576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600654600354604080517ffcd295e30000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201939093529051919092169163fcd295e3916044808301926020929190829003018186803b158015610d9457600080fd5b505afa158015610da8573d6000803e3d6000fd5b505050506040513d6020811015610dbe57600080fd5b5051610dfb5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b5a6022913960400191505060405180910390fd5b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e3483866109e0565b610e418585858585611174565b816001600160a01b0316836001600160a01b03167fe2bdbc6b7225eb0a972ac943c485a6cc05f7c6811838bce8903f23200fb744fa8787604051808381526020018281526020019250505060405180910390a35050505050565b6000610ea884848461133e565b90505b9392505050565b60035481565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b610eea611003565b6001600160a01b0316610efb610bd4565b6001600160a01b031614610f56576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610f9b5760405162461bcd60e51b8152600401808060200182810382526026815260200180611b346026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b8015806110a857506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063dd62ed3e906110569030908690600401611a11565b60206040518083038186803b15801561106e57600080fd5b505afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a691906119c0565b155b6110cd5760405162461bcd60e51b81526004016110c490611ad6565b60405180910390fd5b6111508363095ea7b360e01b84846040516024016110ec929190611a2b565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611485565b505050565b6111508363a9059cbb60e01b84846040516024016110ec929190611a2b565b6001600160a01b03831673b31f66aa3c1e785363f0875a1b74e27b85fd66c7141561123b5773b31f66aa3c1e785363f0875a1b74e27b85fd66c76001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156111f357600080fd5b505af1158015611207573d6000803e3d6000fd5b5050505061121361153b565b1561122c57611227600060018787896115d4565b611236565b611236858561168d565b6112b4565b61124b60016000878760006115d4565b73b31f66aa3c1e785363f0875a1b74e27b85fd66c76001600160a01b031663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561129a57600080fd5b505af11580156112ae573d6000803e3d6000fd5b50505050505b61133782836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561130557600080fd5b505afa158015611319573d6000803e3d6000fd5b505050506040513d602081101561132f57600080fd5b50518361172f565b5050505050565b600083158061135e5750816001600160a01b0316836001600160a01b0316145b806113df5750600760009054906101000a90046001600160a01b03166001600160a01b0316635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d60208110156113dc57600080fd5b50515b156113ec57506000610eab565b6001600160a01b03831673b31f66aa3c1e785363f0875a1b74e27b85fd66c714801561142557506004546001600160a01b038381169116145b1561143a5761143384611753565b9050610eab565b6001600160a01b03821673b31f66aa3c1e785363f0875a1b74e27b85fd66c714801561147357506004546001600160a01b038481169116145b15610eab576114336001600086611843565b600080836001600160a01b0316836040516114a091906119d8565b6000604051808303816000865af19150503d80600081146114dd576040519150601f19603f3d011682016040523d82523d6000602084013e6114e2565b606091505b5091509150816115045760405162461bcd60e51b81526004016110c490611a44565b805115610740578080602001905181019061151f91906119a0565b6107405760405162461bcd60e51b81526004016110c490611a79565b600554600354604080517f96c71db40000000000000000000000000000000000000000000000000000000081526004810192909252516000926001600160a01b0316916396c71db4916024808301926020929190829003018186803b1580156115a357600080fd5b505afa1580156115b7573d6000803e3d6000fd5b505050506040513d60208110156115cd57600080fd5b5051905090565b600754604080517f9169558600000000000000000000000000000000000000000000000000000000815260ff808916600483015287166024820152604481018690526064810185905242608482015290516001600160a01b0390921691639169558691849160a480830192602092919082900301818588803b15801561165957600080fd5b505af115801561166d573d6000803e3d6000fd5b50505050506040513d602081101561168457600080fd5b50505050505050565b600554600354604080517fa638f2e2000000000000000000000000000000000000000000000000000000008152600481019290925260248201849052426044830152516001600160a01b039092169163a638f2e2918591606480830192602092919082900301818588803b15801561170457600080fd5b505af1158015611718573d6000803e3d6000fd5b50505050506040513d602081101561074057600080fd5b306001600160a01b03821614611150576111506001600160a01b0384168284611155565b600080600760009054906101000a90046001600160a01b03166001600160a01b03166314a6bf0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117a457600080fd5b505afa1580156117b8573d6000803e3d6000fd5b505050506040513d60208110156117ce57600080fd5b5051905082811015806117e457506117e461153b565b156117fe576117f66000600185611843565b91505061183e565b6000670de0b6b3a76400008211156118255761181d6000600184611843565b905081840393505b6000611830856118ea565b91909101925061183e915050565b919050565b600754604080517fa95b089f00000000000000000000000000000000000000000000000000000000815260ff8087166004830152851660248201526044810184905290516000926001600160a01b03169163a95b089f916064808301926020929190829003018186803b1580156118b957600080fd5b505afa9250505080156118de57506040513d60208110156118d957600080fd5b505160015b61143357506000610eab565b600654600354604080517ff759cc3b00000000000000000000000000000000000000000000000000000000815260048101929092525160009283926001600160a01b039091169163f759cc3b91602480820192602092909190829003018186803b15801561195757600080fd5b505afa15801561196b573d6000803e3d6000fd5b505050506040513d602081101561198157600080fd5b5051905080670de0b6b3a764000084028161199857fe5b049392505050565b6000602082840312156119b1578081fd5b81518015158114610eab578182fd5b6000602082840312156119d1578081fd5b5051919050565b60008251815b818110156119f857602081860181015185830152016119de565b81811115611a065782828501525b509190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060608201526080019056fe4f776e61626c653a204e6577206f776e657220697320746865207a65726f20616464726573734e6f7420696e7465726661636520666f722074686520706f6f6c656420746f6b656ea2646970667358221220545e5b6d185a78d9d022a249053331f2151129c3ac44b6da7c5027442a5ecb0764736f6c634300070600334f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572",
  "deployedBytecode": "0x6080604052600436106101635760003560e01c806384a33e63116100c0578063eab90da611610074578063f101ec3211610059578063f101ec3214610473578063f23a6e6114610488578063f2fde38b146105955761016a565b8063eab90da6146103e1578063ef99893a146104325761016a565b80638da5cb5b116100a55780638da5cb5b14610384578063dbd9a4d414610399578063e52eb3db146103ae5761016a565b806384a33e63146103215780638980f11f1461034b5761016a565b806369cff80d116101175780637ae26773116100fc5780637ae26773146102bc5780637b067076146102f75780638408f4991461030c5761016a565b806369cff80d14610280578063715018a6146102a75761016a565b8063311c65e011610148578063311c65e01461022a5780634ebb7916146102415780636425666b1461026b5761016a565b806306fdde031461016f57806316f0115b146101f95761016a565b3661016a57005b600080fd5b34801561017b57600080fd5b506101846105c8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101be5781810151838201526020016101a6565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020557600080fd5b5061020e610653565b604080516001600160a01b039092168252519081900360200190f35b34801561023657600080fd5b5061023f610662565b005b34801561024d57600080fd5b5061023f6004803603602081101561026457600080fd5b5035610746565b34801561027757600080fd5b5061020e610877565b34801561028c57600080fd5b50610295610886565b60408051918252519081900360200190f35b3480156102b357600080fd5b5061023f61088c565b3480156102c857600080fd5b5061023f600480360360408110156102df57600080fd5b506001600160a01b0381358116916020013516610957565b34801561030357600080fd5b5061020e6109e4565b34801561031857600080fd5b5061020e6109f3565b34801561032d57600080fd5b5061023f6004803603602081101561034457600080fd5b5035610a02565b34801561035757600080fd5b5061023f6004803603604081101561036e57600080fd5b506001600160a01b038135169060200135610ab4565b34801561039057600080fd5b5061020e610bd4565b3480156103a557600080fd5b5061023f610be3565b3480156103ba57600080fd5b5061023f600480360360208110156103d157600080fd5b50356001600160a01b0316610caf565b3480156103ed57600080fd5b5061023f600480360360a081101561040457600080fd5b508035906020810135906001600160a01b036040820135811691606081013582169160809091013516610e2a565b34801561043e57600080fd5b506102956004803603606081101561045557600080fd5b508035906001600160a01b0360208201358116916040013516610e9b565b34801561047f57600080fd5b50610295610eb2565b34801561049457600080fd5b50610560600480360360a08110156104ab57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156104eb57600080fd5b8201836020820111156104fd57600080fd5b8035906020019184600183028401116401000000008311171561051f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610eb8945050505050565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b3480156105a157600080fd5b5061023f600480360360208110156105b857600080fd5b50356001600160a01b0316610ee2565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b505050505081565b6007546001600160a01b031681565b61066a611003565b6001600160a01b031661067b610bd4565b6001600160a01b0316146106d6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6006546007546040805163a22cb46560e01b81526001600160a01b0392831660048201526000602482018190529151929093169263a22cb465926044808301939282900301818387803b15801561072c57600080fd5b505af1158015610740573d6000803e3d6000fd5b50505050565b61074e611003565b6001600160a01b031661075f610bd4565b6001600160a01b0316146107ba576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000811161080f576040805162461bcd60e51b815260206004820152601e60248201527f59616b416461707465723a204e6f7468696e6720746f207265636f7665720000604482015290519081900360640190fd5b604051339082156108fc029083906000818181858888f1935050505015801561083c573d6000803e3d6000fd5b506040805182815290516000917f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28919081900360200190a250565b6005546001600160a01b031681565b60015481565b610894611003565b6001600160a01b03166108a5610bd4565b6001600160a01b031614610900576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b61095f611003565b6001600160a01b0316610970610bd4565b6001600160a01b0316146109cb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6109e06001600160a01b038316826000611007565b5050565b6006546001600160a01b031681565b6004546001600160a01b031681565b610a0a611003565b6001600160a01b0316610a1b610bd4565b6001600160a01b031614610a76576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600181905560408051828152905130917ff43f23b7a28e6f8ce6843a21bd7b48bce778aa913b8c8cf459edf7d770e8d38a919081900360200190a250565b610abc611003565b6001600160a01b0316610acd610bd4565b6001600160a01b031614610b28576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008111610b7d576040805162461bcd60e51b815260206004820152601e60248201527f59616b416461707465723a204e6f7468696e6720746f207265636f7665720000604482015290519081900360640190fd5b610b916001600160a01b0383163383611155565b6040805182815290516001600160a01b038416917f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28919081900360200190a25050565b6000546001600160a01b031690565b610beb611003565b6001600160a01b0316610bfc610bd4565b6001600160a01b031614610c57576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6006546007546040805163a22cb46560e01b81526001600160a01b039283166004820152600160248201529051919092169163a22cb46591604480830192600092919082900301818387803b15801561072c57600080fd5b610cb7611003565b6001600160a01b0316610cc8610bd4565b6001600160a01b031614610d23576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600654600354604080517ffcd295e30000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201939093529051919092169163fcd295e3916044808301926020929190829003018186803b158015610d9457600080fd5b505afa158015610da8573d6000803e3d6000fd5b505050506040513d6020811015610dbe57600080fd5b5051610dfb5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b5a6022913960400191505060405180910390fd5b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e3483866109e0565b610e418585858585611174565b816001600160a01b0316836001600160a01b03167fe2bdbc6b7225eb0a972ac943c485a6cc05f7c6811838bce8903f23200fb744fa8787604051808381526020018281526020019250505060405180910390a35050505050565b6000610ea884848461133e565b90505b9392505050565b60035481565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b610eea611003565b6001600160a01b0316610efb610bd4565b6001600160a01b031614610f56576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2043616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610f9b5760405162461bcd60e51b8152600401808060200182810382526026815260200180611b346026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b8015806110a857506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063dd62ed3e906110569030908690600401611a11565b60206040518083038186803b15801561106e57600080fd5b505afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a691906119c0565b155b6110cd5760405162461bcd60e51b81526004016110c490611ad6565b60405180910390fd5b6111508363095ea7b360e01b84846040516024016110ec929190611a2b565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611485565b505050565b6111508363a9059cbb60e01b84846040516024016110ec929190611a2b565b6001600160a01b03831673b31f66aa3c1e785363f0875a1b74e27b85fd66c7141561123b5773b31f66aa3c1e785363f0875a1b74e27b85fd66c76001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156111f357600080fd5b505af1158015611207573d6000803e3d6000fd5b5050505061121361153b565b1561122c57611227600060018787896115d4565b611236565b611236858561168d565b6112b4565b61124b60016000878760006115d4565b73b31f66aa3c1e785363f0875a1b74e27b85fd66c76001600160a01b031663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561129a57600080fd5b505af11580156112ae573d6000803e3d6000fd5b50505050505b61133782836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561130557600080fd5b505afa158015611319573d6000803e3d6000fd5b505050506040513d602081101561132f57600080fd5b50518361172f565b5050505050565b600083158061135e5750816001600160a01b0316836001600160a01b0316145b806113df5750600760009054906101000a90046001600160a01b03166001600160a01b0316635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d60208110156113dc57600080fd5b50515b156113ec57506000610eab565b6001600160a01b03831673b31f66aa3c1e785363f0875a1b74e27b85fd66c714801561142557506004546001600160a01b038381169116145b1561143a5761143384611753565b9050610eab565b6001600160a01b03821673b31f66aa3c1e785363f0875a1b74e27b85fd66c714801561147357506004546001600160a01b038481169116145b15610eab576114336001600086611843565b600080836001600160a01b0316836040516114a091906119d8565b6000604051808303816000865af19150503d80600081146114dd576040519150601f19603f3d011682016040523d82523d6000602084013e6114e2565b606091505b5091509150816115045760405162461bcd60e51b81526004016110c490611a44565b805115610740578080602001905181019061151f91906119a0565b6107405760405162461bcd60e51b81526004016110c490611a79565b600554600354604080517f96c71db40000000000000000000000000000000000000000000000000000000081526004810192909252516000926001600160a01b0316916396c71db4916024808301926020929190829003018186803b1580156115a357600080fd5b505afa1580156115b7573d6000803e3d6000fd5b505050506040513d60208110156115cd57600080fd5b5051905090565b600754604080517f9169558600000000000000000000000000000000000000000000000000000000815260ff808916600483015287166024820152604481018690526064810185905242608482015290516001600160a01b0390921691639169558691849160a480830192602092919082900301818588803b15801561165957600080fd5b505af115801561166d573d6000803e3d6000fd5b50505050506040513d602081101561168457600080fd5b50505050505050565b600554600354604080517fa638f2e2000000000000000000000000000000000000000000000000000000008152600481019290925260248201849052426044830152516001600160a01b039092169163a638f2e2918591606480830192602092919082900301818588803b15801561170457600080fd5b505af1158015611718573d6000803e3d6000fd5b50505050506040513d602081101561074057600080fd5b306001600160a01b03821614611150576111506001600160a01b0384168284611155565b600080600760009054906101000a90046001600160a01b03166001600160a01b03166314a6bf0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117a457600080fd5b505afa1580156117b8573d6000803e3d6000fd5b505050506040513d60208110156117ce57600080fd5b5051905082811015806117e457506117e461153b565b156117fe576117f66000600185611843565b91505061183e565b6000670de0b6b3a76400008211156118255761181d6000600184611843565b905081840393505b6000611830856118ea565b91909101925061183e915050565b919050565b600754604080517fa95b089f00000000000000000000000000000000000000000000000000000000815260ff8087166004830152851660248201526044810184905290516000926001600160a01b03169163a95b089f916064808301926020929190829003018186803b1580156118b957600080fd5b505afa9250505080156118de57506040513d60208110156118d957600080fd5b505160015b61143357506000610eab565b600654600354604080517ff759cc3b00000000000000000000000000000000000000000000000000000000815260048101929092525160009283926001600160a01b039091169163f759cc3b91602480820192602092909190829003018186803b15801561195757600080fd5b505afa15801561196b573d6000803e3d6000fd5b505050506040513d602081101561198157600080fd5b5051905080670de0b6b3a764000084028161199857fe5b049392505050565b6000602082840312156119b1578081fd5b81518015158114610eab578182fd5b6000602082840312156119d1578081fd5b5051919050565b60008251815b818110156119f857602081860181015185830152016119de565b81811115611a065782828501525b509190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060608201526080019056fe4f776e61626c653a204e6577206f776e657220697320746865207a65726f20616464726573734e6f7420696e7465726661636520666f722074686520706f6f6c656420746f6b656ea2646970667358221220545e5b6d185a78d9d022a249053331f2151129c3ac44b6da7c5027442a5ecb0764736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverAVAX(uint256)": {
        "params": {
          "_amount": "amount"
        }
      },
      "recoverERC20(address,uint256)": {
        "params": {
          "_tokenAddress": "token address",
          "_tokenAmount": "amount to recover"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revokeAllowance(address,address)": {
        "params": {
          "_spender": "address",
          "_token": "address"
        }
      },
      "setAllowances()": {
        "details": "Should use modifier `onlyOwner` to avoid griefing"
      },
      "swap(uint256,uint256,address,address,address)": {
        "params": {
          "_amountIn": "input amount in starting token",
          "_amountOut": "amount out in ending token",
          "_fromToken": "ERC20 token being sold",
          "_to": "address where swapped funds should be sent to",
          "_toToken": "ERC20 token being bought"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "recoverAVAX(uint256)": {
        "notice": "Recover AVAX from contract"
      },
      "recoverERC20(address,uint256)": {
        "notice": "Recover ERC20 from contract"
      },
      "revokeAllowance(address,address)": {
        "notice": "Revoke token allowance"
      },
      "setAllowances()": {
        "notice": "Approve tokens for use in Strategy"
      },
      "swap(uint256,uint256,address,address,address)": {
        "notice": "Execute a swap from token to token assuming this contract already holds input tokensInteract through the router"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9968,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 50,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "swapGasEstimate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 52,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 5381,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "pooledTknId",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5383,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "pooledTknInterface",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 5385,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "portal",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 5387,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "gavax",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 5389,
        "contract": "contracts/adapters/GeodeWPAdapter.sol:GeodeWPAdapter",
        "label": "pool",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}