{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "AddSupportedChainId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyIncrement",
          "type": "uint256"
        }
      ],
      "name": "AddSwapToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newBridgeRoleAddress",
          "type": "address"
        }
      ],
      "name": "MigrateBridgeRole",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "originTxId",
          "type": "bytes32"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyDecrement",
          "type": "uint256"
        }
      ],
      "name": "RemoveSwapToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "Unwrap",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "addSupportedChainId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "supplyIncrement",
          "type": "uint256"
        }
      ],
      "name": "addSwapToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "chainIds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newBridgeRoleAddress",
          "type": "address"
        }
      ],
      "name": "migrateBridgeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "originTxId",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "supplyDecrement",
          "type": "uint256"
        }
      ],
      "name": "removeSwapToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "swapSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "swapTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001bbd38038062001bbd833981016040819052620000349162000291565b818160036200004483826200038a565b5060046200005382826200038a565b506006915062000066905083826200038a565b5060076200007582826200038a565b5062000091336005620000ce60201b62000dd81790919060201c565b50506000805260096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b805460ff1916600117905562000456565b620000da828262000152565b156200012d5760405162461bcd60e51b815260206004820152601860248201527f4163636f756e7420616c72656164792068617320726f6c65000000000000000060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620001ac5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320746865207a65726f20616464726573730000000000604482015260640162000124565b506001600160a01b03166000908152602091909152604090205460ff1690565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f457600080fd5b81516001600160401b0380821115620002115762000211620001cc565b604051601f8301601f19908116603f011681019082821181831017156200023c576200023c620001cc565b816040528381526020925086838588010111156200025957600080fd5b600091505b838210156200027d57858201830151818301840152908201906200025e565b600093810190920192909252949350505050565b60008060408385031215620002a557600080fd5b82516001600160401b0380821115620002bd57600080fd5b620002cb86838701620001e2565b93506020850151915080821115620002e257600080fd5b50620002f185828601620001e2565b9150509250929050565b600181811c908216806200031057607f821691505b6020821081036200033157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038557600081815260208120601f850160051c81016020861015620003605750805b601f850160051c820191505b8181101562000381578281556001016200036c565b5050505b505050565b81516001600160401b03811115620003a657620003a6620001cc565b620003be81620003b78454620002fb565b8462000337565b602080601f831160018114620003f65760008415620003dd5750858301515b600019600386901b1c1916600185901b17855562000381565b600085815260208120601f198616915b82811015620004275788860151825594840194600190910190840162000406565b5085821015620004465787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61175780620004666000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806367fc19bb116100c3578063a457c2d71161007c578063a457c2d714610325578063a9059cbb14610338578063ab32dbb71461034b578063d004f0f714610377578063dd62ed3e1461038a578063eff038301461039d57600080fd5b806367fc19bb146102a85780636e286671146102bb57806370a08231146102ce57806379cc6790146102f75780637c38b4571461030a57806395d89b411461031d57600080fd5b8063313ce56711610115578063313ce56714610238578063395093511461024757806340c10f191461025a57806342966c681461026f5780635d9898d31461028257806366de3b361461029557600080fd5b806306fdde031461015d578063095ea7b31461017b5780630fcf41ae1461019e57806318160ddd146101f057806321d930901461020257806323b872dd14610225575b600080fd5b6101656103b0565b60405161017291906114d6565b60405180910390f35b61018e610189366004611540565b610442565b6040519015158152602001610172565b6101d16101ac36600461156a565b600860205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610172565b6002545b604051908152602001610172565b61018e61021036600461158c565b60096020526000908152604090205460ff1681565b61018e6102333660046115a5565b61045c565b60405160128152602001610172565b61018e610255366004611540565b610480565b61026d610268366004611540565b6104a2565b005b61026d61027d36600461158c565b6104b0565b61026d61029036600461156a565b6104bd565b61026d6102a336600461158c565b610542565b61026d6102b63660046115e1565b61062f565b61026d6102c936600461162f565b6106cf565b6101f46102dc36600461156a565b6001600160a01b031660009081526020819052604090205490565b61026d610305366004611540565b6107c1565b61026d610318366004611540565b6107d6565b6101656109a1565b61018e610333366004611540565b6109b0565b61018e610346366004611540565b610a2b565b6101f461035936600461156a565b6001600160a01b031660009081526008602052604090206001015490565b61026d610385366004611540565b610a39565b6101f4610398366004611651565b610c4f565b61026d6103ab366004611540565b610c7a565b6060600380546103bf90611684565b80601f01602080910402602001604051908101604052809291908181526020018280546103eb90611684565b80156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b5050505050905090565b600033610450818585610e54565b60019150505b92915050565b60003361046a858285610f79565b610475858585610ff3565b506001949350505050565b6000336104508185856104938383610c4f565b61049d91906116d4565b610e54565b6104ac82826111c1565b5050565b6104ba33826112a0565b50565b6104c86005336113e6565b6104ed5760405162461bcd60e51b81526004016104e4906116e7565b60405180910390fd5b6104f860053361145e565b610503600582610dd8565b6040516001600160a01b03821681527f871b00a4e20f8436702d0174eb87d84d7cd1dd5c34d4bb1b4e75438b3398d5129060200160405180910390a150565b61054d6005336113e6565b6105695760405162461bcd60e51b81526004016104e4906116e7565b468082036105b95760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74206164642063757272656e7420636861696e2049442e0000000060448201526064016104e4565b60008281526009602052604090205460ff1615156001036105d8575050565b60008281526009602052604090819020805460ff19166001179055517f677e2d9a4ed9201aa86725fef875137fc53876e6b68036b974404762682bd122906106239084815260200190565b60405180910390a15050565b61063a6005336113e6565b6106565760405162461bcd60e51b81526004016104e4906116e7565b61066085856111c1565b81156106705761067083836111c1565b604080516001600160a01b03878116825260208201879052851681830152606081018490526080810183905290517f918d77674bb88eaf75afb307c9723ea6037706de68d6fc07dd0c6cba423a52509181900360a00190a15050505050565b32331461071e5760405162461bcd60e51b815260206004820152601d60248201527f436f6e74726163742063616c6c73206e6f7420737570706f727465642e00000060448201526064016104e4565b60008181526009602052604090205460ff1615156001146107815760405162461bcd60e51b815260206004820152601760248201527f436861696e204944206e6f7420737570706f727465642e00000000000000000060448201526064016104e4565b61078b33836112a0565b60408051838152602081018390527f37a06799a3500428a773d00284aa706101f5ad94dae9ec37e1c3773aa54c33049101610623565b6107cc823383610f79565b6104ac82826112a0565b6107e16005336113e6565b61081c5760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064016104e4565b813b6108655760405162461bcd60e51b815260206004820152601860248201527720b2323932b9b99034b9903737ba1031b7b73a3930b1ba1760411b60448201526064016104e4565b6001600160a01b03828116600090815260086020526040902054166108cc5760405162461bcd60e51b815260206004820152601860248201527f5377617020746f6b656e206e6f7420737570706f72746564000000000000000060448201526064016104e4565b6001600160a01b038216600090815260086020526040902060010154811015610937576001600160a01b03821660009081526008602052604090206001015461091690829061170e565b6001600160a01b038316600090815260086020526040902060010155610962565b6001600160a01b038216600090815260086020526040812080546001600160a01b0319168155600101555b604080516001600160a01b0384168152602081018390527fd3b4025ff115b79bf2ec5a73c9c784ba8aa9f8f6ba9186b255895c1a9f9042a39101610623565b6060600480546103bf90611684565b600033816109be8286610c4f565b905083811015610a1e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e4565b6104758286868403610e54565b600033610450818585610ff3565b813b610a875760405162461bcd60e51b815260206004820152601860248201527f546f6b656e206973206e6f74206120636f6e74726163742e000000000000000060448201526064016104e4565b6001600160a01b0382811660009081526008602052604090205416610aee5760405162461bcd60e51b815260206004820152601d60248201527f5377617020746f6b656e206973206e6f74206120636f6e74726163742e00000060448201526064016104e4565b6001600160a01b038216600090815260086020526040902060010154811115610b595760405162461bcd60e51b815260206004820181905260248201527f5377617020616d6f756e74206973206d6f7265207468616e20737570706c792e60448201526064016104e4565b6001600160a01b038216600090815260086020526040902060010154610b8090829061170e565b6001600160a01b038381166000908152600860205260409081902060018101939093559154915163079cc67960e41b81523360048201526024810184905291169081906379cc679090604401600060405180830381600087803b158015610be657600080fd5b505af1158015610bfa573d6000803e3d6000fd5b50505050610c0833836111c1565b604080516001600160a01b0385168152602081018490527f562c219552544ec4c9d7a8eb850f80ea152973e315372bf4999fe7c953ea004f910160405180910390a1505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610c856005336113e6565b610ca15760405162461bcd60e51b81526004016104e4906116e7565b813b610cea5760405162461bcd60e51b815260206004820152601860248201527720b2323932b9b99034b9903737ba1031b7b73a3930b1ba1760411b60448201526064016104e4565b6001600160a01b0382811660009081526008602052604090205416610d55576040805180820182526001600160a01b03848116808352602080840186815260009283526008909152939020915182546001600160a01b03191691161781559051600190910155610d99565b6001600160a01b038216600090815260086020526040902060010154610d7c9082906116d4565b6001600160a01b0383166000908152600860205260409020600101555b604080516001600160a01b0384168152602081018390527f3e4fdfb0f47da284fe8b5b3a7e5d10b211e323c9a0c144c421ae1d211873f8539101610623565b610de282826113e6565b15610e2f5760405162461bcd60e51b815260206004820152601860248201527f4163636f756e7420616c72656164792068617320726f6c65000000000000000060448201526064016104e4565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038316610eb65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e4565b6001600160a01b038216610f175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610f858484610c4f565b90506000198114610fed5781811015610fe05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e4565b610fed8484848403610e54565b50505050565b6001600160a01b0383166110575760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e4565b6001600160a01b0382166110b95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e4565b6001600160a01b038316600090815260208190526040902054818110156111315760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e4565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906111689084906116d4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111b491815260200190565b60405180910390a3610fed565b6001600160a01b0382166112175760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e4565b806002600082825461122991906116d4565b90915550506001600160a01b038216600090815260208190526040812080548392906112569084906116d4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166113005760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e4565b6001600160a01b038216600090815260208190526040902054818110156113745760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e4565b6001600160a01b03831660009081526020819052604081208383039055600280548492906113a390849061170e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f6c565b60006001600160a01b03821661143e5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320746865207a65726f2061646472657373000000000060448201526064016104e4565b506001600160a01b03166000908152602091909152604090205460ff1690565b61146882826113e6565b6114b45760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e7420646f6573206e6f74206861766520726f6c6500000000000060448201526064016104e4565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600060208083528351808285015260005b81811015611503578581018301518582016040015282016114e7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461153b57600080fd5b919050565b6000806040838503121561155357600080fd5b61155c83611524565b946020939093013593505050565b60006020828403121561157c57600080fd5b61158582611524565b9392505050565b60006020828403121561159e57600080fd5b5035919050565b6000806000606084860312156115ba57600080fd5b6115c384611524565b92506115d160208501611524565b9150604084013590509250925092565b600080600080600060a086880312156115f957600080fd5b61160286611524565b94506020860135935061161760408701611524565b94979396509394606081013594506080013592915050565b6000806040838503121561164257600080fd5b50508035926020909101359150565b6000806040838503121561166457600080fd5b61166d83611524565b915061167b60208401611524565b90509250929050565b600181811c9082168061169857607f821691505b6020821081036116b857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610456576104566116be565b6020808252600d908201526c2ab730baba3437b934bd32b21760991b604082015260600190565b81810381811115610456576104566116be56fea26469706673582212203971800a66029de753e10eb705062c727433c99dc5997f147d609f03195eca1964736f6c63430008110033",
    "sourceMap": "986:7658:81:-:0;;;1858:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1930:10;1942:12;2044:5:2;:13;1930:10:81;2044:5:2;:13;:::i;:::-;-1:-1:-1;2067:7:2;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;1966:10:81::1;::::0;-1:-1:-1;1966:23:81::1;::::0;-1:-1:-1;1979:10:81;1966;:23:::1;:::i;:::-;-1:-1:-1::0;1999:12:81::1;:27;2014:12:::0;1999;:27:::1;:::i;:::-;;2036;2052:10;2036:11;:15;;;;;;:27;;;;:::i;:::-;-1:-1:-1::0;;2073:11:81::1;::::0;;:8:::1;:11;::::0;;:18;;-1:-1:-1;;2073:18:81::1;2087:4;2073:18;::::0;;986:7658;;284:168;361:18;365:4;371:7;361:3;:18::i;:::-;360:19;352:56;;;;-1:-1:-1;;;352:56:81;;4349:2:85;352:56:81;;;4331:21:85;4388:2;4368:18;;;4361:30;4427:26;4407:18;;;4400:54;4471:18;;352:56:81;;;;;;;;;-1:-1:-1;;;;;418:20:81;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;418:27:81;441:4;418:27;;;284:168::o;789:193::-;861:4;-1:-1:-1;;;;;885:21:81;;877:61;;;;-1:-1:-1;;;877:61:81;;4702:2:85;877:61:81;;;4684:21:85;4741:2;4721:18;;;4714:30;4780:29;4760:18;;;4753:57;4827:18;;877:61:81;4500:351:85;877:61:81;-1:-1:-1;;;;;;955:20:81;:11;:20;;;;;;;;;;;;;;;789:193::o;14:127:85:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:85;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:85;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:85:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:85;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:85;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:85;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:85;;;3992:26;3943:89;-1:-1:-1;;2747:1:85;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:85;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:85;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:85;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:85:o;4500:351::-;986:7658:81;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "986:7658:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:85;;1162:22;1144:41;;1132:2;1117:18;4433:197:2;1004:187:85;1297:47:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1297:47:81;;;;;;;;;;-1:-1:-1;;;;;1579:32:85;;;1561:51;;1643:2;1628:18;;1621:34;;;;1534:18;1297:47:81;1387:274:85;3244:106:2;3331:12;;3244:106;;;1812:25:85;;;1800:2;1785:18;3244:106:2;1666:177:85;1351:40:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5192:286:2;;;;;;:::i;:::-;;:::i;2104:103:81:-;;;1204:2;2508:36:85;;2496:2;2481:18;2104:103:81;2366:184:85;5873:234:2;;;;;;:::i;:::-;;:::i;8555:87:81:-;;;;;;:::i;:::-;;:::i;:::-;;578:89:4;;;;;;:::i;:::-;;:::i;4665:275:81:-;;;;;;:::i;:::-;;:::i;3264:570::-;;;;;;:::i;:::-;;:::i;2752:398::-;;;;;;:::i;:::-;;:::i;4200:322::-;;;;;;:::i;:::-;;:::i;3408:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125;973:161:4;;;;;;:::i;:::-;;:::i;6197:850:81:-;;;;;;:::i;:::-;;:::i;2367:102:2:-;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;7219:113:81:-;;;;;;:::i;:::-;-1:-1:-1;;;;;7301:17:81;7275:7;7301:17;;;:10;:17;;;;;:24;;;;7219:113;7484:687;;;;;;:::i;:::-;;:::i;3976:149:2:-;;;;;;:::i;:::-;;:::i;5214:756:81:-;;;;;;:::i;:::-;;:::i;2156:98:2:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:6;4570:32:2;719:10:6;4586:7:2;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:6;5375:38:2;5391:4;719:10:6;5406:6:2;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:2;;5192:286;-1:-1:-1;;;;5192:286:2:o;5873:234::-;5961:4;719:10:6;6015:64:2;719:10:6;6031:7:2;6068:10;6040:25;719:10:6;6031:7:2;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;8555:87:81:-;8616:19;8622:3;8627:7;8616:5;:19::i;:::-;8555:87;;:::o;578:89:4:-;633:27;719:10:6;653:6:4;633:5;:27::i;:::-;578:89;:::o;4665:275:81:-;4747:27;:11;4763:10;4747:15;:27::i;:::-;4739:53;;;;-1:-1:-1;;;4739:53:81;;;;;;;:::i;:::-;;;;;;;;;4802:30;:11;4821:10;4802:18;:30::i;:::-;4842:37;:11;4858:20;4842:15;:37::i;:::-;4894:39;;-1:-1:-1;;;;;4697:32:85;;4679:51;;4894:39:81;;4667:2:85;4652:18;4894:39:81;;;;;;;4665:275;:::o;3264:570::-;3335:27;:11;3351:10;3335:15;:27::i;:::-;3327:53;;;;-1:-1:-1;;;3327:53:81;;;;;;;:::i;:::-;3546:9;3582:25;;;3574:66;;;;-1:-1:-1;;;3574:66:81;;4943:2:85;3574:66:81;;;4925:21:85;4982:2;4962:18;;;4955:30;5021;5001:18;;;4994:58;5069:18;;3574:66:81;4741:352:85;3574:66:81;3692:17;;;;:8;:17;;;;;;;;:25;;:17;:25;3688:62;;3733:7;3264:570;:::o;3688:62::-;3760:17;;;;:8;:17;;;;;;;:24;;-1:-1:-1;;3760:24:81;3780:4;3760:24;;;3799:28;;;;;3769:7;1812:25:85;;1800:2;1785:18;;1666:177;3799:28:81;;;;;;;;3317:517;3264:570;:::o;2752:398::-;2924:27;:11;2940:10;2924:15;:27::i;:::-;2916:53;;;;-1:-1:-1;;;2916:53:81;;;;;;;:::i;:::-;2979:17;2985:2;2989:6;2979:5;:17::i;:::-;3010:13;;3006:72;;3039:28;3045:10;3057:9;3039:5;:28::i;:::-;3092:51;;;-1:-1:-1;;;;;5413:15:85;;;5395:34;;5460:2;5445:18;;5438:34;;;5508:15;;5488:18;;;5481:43;5555:2;5540:18;;5533:34;;;5598:3;5583:19;;5576:35;;;3092:51:81;;;;;;;5344:3:85;3092:51:81;;;2752:398;;;;;:::o;4200:322::-;4274:9;4287:10;4274:23;4266:65;;;;-1:-1:-1;;;4266:65:81;;5824:2:85;4266:65:81;;;5806:21:85;5863:2;5843:18;;;5836:30;5902:31;5882:18;;;5875:59;5951:18;;4266:65:81;5622:353:85;4266:65:81;4389:17;;;;:8;:17;;;;;;;;:25;;:17;:25;4381:61;;;;-1:-1:-1;;;4381:61:81;;6182:2:85;4381:61:81;;;6164:21:85;6221:2;6201:18;;;6194:30;6260:25;6240:18;;;6233:53;6303:18;;4381:61:81;5980:347:85;4381:61:81;4452:25;4458:10;4470:6;4452:5;:25::i;:::-;4492:23;;;6506:25:85;;;6562:2;6547:18;;6540:34;;;4492:23:81;;6479:18:85;4492:23:81;6332:248:85;973:161:4;1049:46;1065:7;719:10:6;1088:6:4;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;6197:850:81:-;6297:27;:11;6313:10;6297:15;:27::i;:::-;6289:52;;;;-1:-1:-1;;;6289:52:81;;6787:2:85;6289:52:81;;;6769:21:85;6826:2;6806:18;;;6799:30;-1:-1:-1;;;6845:18:85;;;6838:42;6897:18;;6289:52:81;6585:336:85;6289:52:81;8443:17;;6351:64;;;;-1:-1:-1;;;6351:64:81;;7128:2:85;6351:64:81;;;7110:21:85;7167:2;7147:18;;;7140:30;-1:-1:-1;;;7186:18:85;;;7179:54;7250:18;;6351:64:81;6926:348:85;6351:64:81;-1:-1:-1;;;;;6433:27:81;;;6486:1;6433:27;;;:10;:27;;;;;:41;;6425:92;;;;-1:-1:-1;;;6425:92:81;;7481:2:85;6425:92:81;;;7463:21:85;7520:2;7500:18;;;7493:30;7559:26;7539:18;;;7532:54;7603:18;;6425:92:81;7279:348:85;6425:92:81;-1:-1:-1;;;;;6744:27:81;;;;;;:10;:27;;;;;:34;;;:52;-1:-1:-1;6740:237:81;;;-1:-1:-1;;;;;6849:27:81;;;;;;:10;:27;;;;;:34;;;:52;;6886:15;;6849:52;:::i;:::-;-1:-1:-1;;;;;6812:27:81;;;;;;:10;:27;;;;;:34;;:89;6740:237;;;-1:-1:-1;;;;;6939:27:81;;;;;;:10;:27;;;;;6932:34;;-1:-1:-1;;;;;;6932:34:81;;;;;;6740:237;6991:49;;;-1:-1:-1;;;;;1579:32:85;;1561:51;;1643:2;1628:18;;1621:34;;;6991:49:81;;1534:18:85;6991:49:81;1387:274:85;2367:102:2;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:6;6687:4:2;6768:25;719:10:6;6785:7:2;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:2;;7967:2:85;6803:85:2;;;7949:21:85;8006:2;7986:18;;;7979:30;8045:34;8025:18;;;8018:62;-1:-1:-1;;;8096:18:85;;;8089:35;8141:19;;6803:85:2;7765:401:85;6803:85:2;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:6;3862:28:2;719:10:6;3879:2:2;3883:6;3862:9;:28::i;7484:687:81:-;8443:17;;7546:54;;;;-1:-1:-1;;;7546:54:81;;8373:2:85;7546:54:81;;;8355:21:85;8412:2;8392:18;;;8385:30;8451:26;8431:18;;;8424:54;8495:18;;7546:54:81;8171:348:85;7546:54:81;-1:-1:-1;;;;;7618:17:81;;;7661:1;7618:17;;;:10;:17;;;;;:31;;7610:87;;;;-1:-1:-1;;;7610:87:81;;8726:2:85;7610:87:81;;;8708:21:85;8765:2;8745:18;;;8738:30;8804:31;8784:18;;;8777:59;8853:18;;7610:87:81;8524:353:85;7610:87:81;-1:-1:-1;;;;;7725:17:81;;;;;;:10;:17;;;;;:24;;;7715:34;;;7707:79;;;;-1:-1:-1;;;7707:79:81;;9084:2:85;7707:79:81;;;9066:21:85;;;9103:18;;;9096:30;9162:34;9142:18;;;9135:62;9214:18;;7707:79:81;8882:356:85;7707:79:81;-1:-1:-1;;;;;7867:17:81;;;;;;:10;:17;;;;;:24;;;:33;;7894:6;;7867:33;:::i;:::-;-1:-1:-1;;;;;7840:17:81;;;;;;;:10;:17;;;;;;;:24;;;:60;;;;7982:31;;8024:38;;-1:-1:-1;;;8024:38:81;;8043:10;8024:38;;;1561:51:85;1628:18;;;1621:34;;;7982:31:81;;;;;8024:18;;1534::85;;8024:38:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8104:25;8110:10;8122:6;8104:5;:25::i;:::-;8145:19;;;-1:-1:-1;;;;;1579:32:85;;1561:51;;1643:2;1628:18;;1621:34;;;8145:19:81;;1534:18:85;8145:19:81;;;;;;;7536:635;7484:687;;:::o;3976:149:2:-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;5214:756:81:-;5311:27;:11;5327:10;5311:15;:27::i;:::-;5303:53;;;;-1:-1:-1;;;5303:53:81;;;;;;;:::i;:::-;8443:17;;5366:64;;;;-1:-1:-1;;;5366:64:81;;7128:2:85;5366:64:81;;;7110:21:85;7167:2;7147:18;;;7140:30;-1:-1:-1;;;7186:18:85;;;7179:54;7250:18;;5366:64:81;6926:348:85;5366:64:81;-1:-1:-1;;;;;5601:27:81;;;5654:1;5601:27;;;:10;:27;;;;;:41;;5597:306;;5702:70;;;;;;;;-1:-1:-1;;;;;5702:70:81;;;;;;;;;;;;;-1:-1:-1;5672:27:81;;;:10;:27;;;;;;:100;;;;-1:-1:-1;;;;;;5672:100:81;;;;;;;;-1:-1:-1;5672:100:81;;;;5597:306;;;-1:-1:-1;;;;;5840:27:81;;;;;;:10;:27;;;;;:34;;;:52;;5877:15;;5840:52;:::i;:::-;-1:-1:-1;;;;;5803:27:81;;;;;;:10;:27;;;;;:34;;:89;5597:306;5917:46;;;-1:-1:-1;;;;;1579:32:85;;1561:51;;1643:2;1628:18;;1621:34;;;5917:46:81;;1534:18:85;5917:46:81;1387:274:85;284:168:81;361:18;365:4;371:7;361:3;:18::i;:::-;360:19;352:56;;;;-1:-1:-1;;;352:56:81;;9445:2:85;352:56:81;;;9427:21:85;9484:2;9464:18;;;9457:30;9523:26;9503:18;;;9496:54;9567:18;;352:56:81;9243:348:85;352:56:81;-1:-1:-1;;;;;418:20:81;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;418:27:81;441:4;418:27;;;284:168::o;10110:370:2:-;-1:-1:-1;;;;;10241:19:2;;10233:68;;;;-1:-1:-1;;;10233:68:2;;9798:2:85;10233:68:2;;;9780:21:85;9837:2;9817:18;;;9810:30;9876:34;9856:18;;;9849:62;-1:-1:-1;;;9927:18:85;;;9920:34;9971:19;;10233:68:2;9596:400:85;10233:68:2;-1:-1:-1;;;;;10319:21:2;;10311:68;;;;-1:-1:-1;;;10311:68:2;;10203:2:85;10311:68:2;;;10185:21:85;10242:2;10222:18;;;10215:30;10281:34;10261:18;;;10254:62;-1:-1:-1;;;10332:18:85;;;10325:32;10374:19;;10311:68:2;10001:398:85;10311:68:2;-1:-1:-1;;;;;10390:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1812:25:85;;;10441:32:2;;1785:18:85;10441:32:2;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:2;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:2;;10606:2:85;11010:68:2;;;10588:21:85;10645:2;10625:18;;;10618:30;10684:31;10664:18;;;10657:59;10733:18;;11010:68:2;10404:353:85;11010:68:2;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:2;;7593:68;;;;-1:-1:-1;;;7593:68:2;;10964:2:85;7593:68:2;;;10946:21:85;11003:2;10983:18;;;10976:30;11042:34;11022:18;;;11015:62;-1:-1:-1;;;11093:18:85;;;11086:35;11138:19;;7593:68:2;10762:401:85;7593:68:2;-1:-1:-1;;;;;7679:16:2;;7671:64;;;;-1:-1:-1;;;7671:64:2;;11370:2:85;7671:64:2;;;11352:21:85;11409:2;11389:18;;;11382:30;11448:34;11428:18;;;11421:62;-1:-1:-1;;;11499:18:85;;;11492:33;11542:19;;7671:64:2;11168:399:85;7671:64:2;-1:-1:-1;;;;;7817:15:2;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:2;;11774:2:85;7842:72:2;;;11756:21:85;11813:2;11793:18;;;11786:30;11852:34;11832:18;;;11825:62;-1:-1:-1;;;11903:18:85;;;11896:36;11949:19;;7842:72:2;11572:402:85;7842:72:2;-1:-1:-1;;;;;7948:15:2;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:2;8054:4;-1:-1:-1;;;;;8045:26:2;;8064:6;8045:26;;;;1812:25:85;;1800:2;1785:18;;1666:177;8045:26:2;;;;;;;;8082:37;9111:576;8402:389;-1:-1:-1;;;;;8485:21:2;;8477:65;;;;-1:-1:-1;;;8477:65:2;;12181:2:85;8477:65:2;;;12163:21:85;12220:2;12200:18;;;12193:30;12259:33;12239:18;;;12232:61;12310:18;;8477:65:2;11979:355:85;8477:65:2;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:2;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:2;;1812:25:85;;;-1:-1:-1;;;;;8688:37:2;;;8705:1;;8688:37;;1800:2:85;1785:18;8688:37:2;;;;;;;8555:87:81;;:::o;9111:576:2:-;-1:-1:-1;;;;;9194:21:2;;9186:67;;;;-1:-1:-1;;;9186:67:2;;12541:2:85;9186:67:2;;;12523:21:85;12580:2;12560:18;;;12553:30;12619:34;12599:18;;;12592:62;-1:-1:-1;;;12670:18:85;;;12663:31;12711:19;;9186:67:2;12339:397:85;9186:67:2;-1:-1:-1;;;;;9349:18:2;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;-1:-1:-1;;;9377:71:2;;12943:2:85;9377:71:2;;;12925:21:85;12982:2;12962:18;;;12955:30;13021:34;13001:18;;;12994:62;-1:-1:-1;;;13072:18:85;;;13065:32;13114:19;;9377:71:2;12741:398:85;9377:71:2;-1:-1:-1;;;;;9482:18:2;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:2;;1812:25:85;;;9610:1:2;;-1:-1:-1;;;;;9584:37:2;;;;;1800:2:85;1785:18;9584:37:2;1666:177:85;789:193:81;861:4;-1:-1:-1;;;;;885:21:81;;877:61;;;;-1:-1:-1;;;877:61:81;;13346:2:85;877:61:81;;;13328:21:85;13385:2;13365:18;;;13358:30;13424:29;13404:18;;;13397:57;13471:18;;877:61:81;13144:351:85;877:61:81;-1:-1:-1;;;;;;955:20:81;:11;:20;;;;;;;;;;;;;;;789:193::o;527:173::-;606:18;610:4;616:7;606:3;:18::i;:::-;598:57;;;;-1:-1:-1;;;598:57:81;;13702:2:85;598:57:81;;;13684:21:85;13741:2;13721:18;;;13714:30;13780:28;13760:18;;;13753:56;13826:18;;598:57:81;13500:350:85;598:57:81;-1:-1:-1;;;;;665:20:81;688:5;665:20;;;;;;;;;;;:28;;-1:-1:-1;;665:28:81;;;527:173::o;14:548:85:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:85;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:85:o;1196:186::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:52;;;1324:1;1321;1314:12;1276:52;1347:29;1366:9;1347:29;:::i;:::-;1337:39;1196:186;-1:-1:-1;;;1196:186:85:o;1848:180::-;1907:6;1960:2;1948:9;1939:7;1935:23;1931:32;1928:52;;;1976:1;1973;1966:12;1928:52;-1:-1:-1;1999:23:85;;1848:180;-1:-1:-1;1848:180:85:o;2033:328::-;2110:6;2118;2126;2179:2;2167:9;2158:7;2154:23;2150:32;2147:52;;;2195:1;2192;2185:12;2147:52;2218:29;2237:9;2218:29;:::i;:::-;2208:39;;2266:38;2300:2;2289:9;2285:18;2266:38;:::i;:::-;2256:48;;2351:2;2340:9;2336:18;2323:32;2313:42;;2033:328;;;;;:::o;2555:466::-;2650:6;2658;2666;2674;2682;2735:3;2723:9;2714:7;2710:23;2706:33;2703:53;;;2752:1;2749;2742:12;2703:53;2775:29;2794:9;2775:29;:::i;:::-;2765:39;;2851:2;2840:9;2836:18;2823:32;2813:42;;2874:38;2908:2;2897:9;2893:18;2874:38;:::i;:::-;2555:466;;;;-1:-1:-1;2864:48:85;;2959:2;2944:18;;2931:32;;-1:-1:-1;3010:3:85;2995:19;2982:33;;2555:466;-1:-1:-1;;2555:466:85:o;3026:248::-;3094:6;3102;3155:2;3143:9;3134:7;3130:23;3126:32;3123:52;;;3171:1;3168;3161:12;3123:52;-1:-1:-1;;3194:23:85;;;3264:2;3249:18;;;3236:32;;-1:-1:-1;3026:248:85:o;3279:260::-;3347:6;3355;3408:2;3396:9;3387:7;3383:23;3379:32;3376:52;;;3424:1;3421;3414:12;3376:52;3447:29;3466:9;3447:29;:::i;:::-;3437:39;;3495:38;3529:2;3518:9;3514:18;3495:38;:::i;:::-;3485:48;;3279:260;;;;;:::o;3544:380::-;3623:1;3619:12;;;;3666;;;3687:61;;3741:4;3733:6;3729:17;3719:27;;3687:61;3794:2;3786:6;3783:14;3763:18;3760:38;3757:161;;3840:10;3835:3;3831:20;3828:1;3821:31;3875:4;3872:1;3865:15;3903:4;3900:1;3893:15;3757:161;;3544:380;;;:::o;3929:127::-;3990:10;3985:3;3981:20;3978:1;3971:31;4021:4;4018:1;4011:15;4045:4;4042:1;4035:15;4061:125;4126:9;;;4147:10;;;4144:36;;;4160:18;;:::i;4191:337::-;4393:2;4375:21;;;4432:2;4412:18;;;4405:30;-1:-1:-1;;;4466:2:85;4451:18;;4444:43;4519:2;4504:18;;4191:337::o;7632:128::-;7699:9;;;7720:11;;;7717:37;;;7734:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addSupportedChainId(uint256)": "66de3b36",
    "addSwapToken(address,uint256)": "eff03830",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "chainIds(uint256)": "21d93090",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "migrateBridgeRole(address)": "5d9898d3",
    "mint(address,uint256)": "40c10f19",
    "mint(address,uint256,address,uint256,bytes32)": "67fc19bb",
    "name()": "06fdde03",
    "removeSwapToken(address,uint256)": "7c38b457",
    "swap(address,uint256)": "d004f0f7",
    "swapSupply(address)": "ab32dbb7",
    "swapTokens(address)": "0fcf41ae",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unwrap(uint256,uint256)": "6e286671"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"AddSupportedChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyIncrement\",\"type\":\"uint256\"}],\"name\":\"AddSwapToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBridgeRoleAddress\",\"type\":\"address\"}],\"name\":\"MigrateBridgeRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"originTxId\",\"type\":\"bytes32\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyDecrement\",\"type\":\"uint256\"}],\"name\":\"RemoveSwapToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"addSupportedChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyIncrement\",\"type\":\"uint256\"}],\"name\":\"addSwapToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"chainIds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBridgeRoleAddress\",\"type\":\"address\"}],\"name\":\"migrateBridgeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"originTxId\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyDecrement\",\"type\":\"uint256\"}],\"name\":\"removeSwapToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"swapSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addSupportedChainId(uint256)\":{\"details\":\"Add new chainId to list of supported Ids.\",\"params\":{\"chainId\":\"ChainId to add.\"}},\"addSwapToken(address,uint256)\":{\"details\":\"Add Token to accept swaps from or increase supply of existing swap token.\",\"params\":{\"contractAddress\":\"Token Address to allow swaps.\",\"supplyIncrement\":\"Amount of assets allowed to be swapped (or incremental increase in amount).\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"migrateBridgeRole(address)\":{\"details\":\"Provide Bridge Role (Admin Role) to new address.\",\"params\":{\"newBridgeRoleAddress\":\"New bridge role address.\"}},\"mint(address,uint256,address,uint256,bytes32)\":{\"details\":\"Mint function used by bridge.  Optional FeeAddress and FeeAmount parameters used to mint small percentage of  transfered assets directly to bridge.\",\"params\":{\"amount\":\"Amount of funds to mint.\",\"feeAddress\":\"Address to mint bridge fees to.\",\"feeAmount\":\"Amount to mint as bridge fees.\",\"originTxId\":\"Transaction ID from external network that triggered this minting.\",\"to\":\"Address to mint funds to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeSwapToken(address,uint256)\":{\"details\":\"Remove amount of swaps allowed from existing swap token.\",\"params\":{\"contractAddress\":\"Token Address to remove swap amount.\",\"supplyDecrement\":\"Amount to remove from the swap supply.\"}},\"swap(address,uint256)\":{\"details\":\"Perform Swap.\",\"params\":{\"amount\":\"Amount of token to be swapped.\",\"token\":\"Address of token to be swapped.\"}},\"swapSupply(address)\":{\"details\":\"Fetch the remaining amount allowed for a swap token.\",\"params\":{\"token\":\"Address of swap token.\"},\"returns\":{\"_0\":\"amount of swaps remaining.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unwrap(uint256,uint256)\":{\"details\":\"Burns assets and signals bridge to migrate funds to the same address on the provided chainId.\",\"params\":{\"amount\":\"Amount of asset to unwrap.\",\"chainId\":\"ChainId to unwrap or migrate funds to. Only used for multi-network bridge deployment.                Zero by default for bridge deployment with only 2 networks.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/test/BridgeToken.sol\":\"BridgeToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/contracts/test/BridgeToken.sol\":{\"keccak256\":\"0xc2a641dc875ec2787a2f258441fd74b0c232714017df271ca39eb5c81d823051\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6aa4af6d3d72a7be6f3e1b8b982ea53d9c663ee5c600ae399f325b78983ca88\",\"dweb:/ipfs/QmdBRe7yxG8xyK2DoihnqzN64M6YkfAXhegetvJGew8Pir\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_tokenSymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddSupportedChainId",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "supplyIncrement",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddSwapToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newBridgeRoleAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MigrateBridgeRole",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "feeAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "originTxId",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "supplyDecrement",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveSwapToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unwrap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSupportedChainId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "supplyIncrement",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSwapToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "chainIds",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newBridgeRoleAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateBridgeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "originTxId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "supplyDecrement",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeSwapToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swapSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swapTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrap"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addSupportedChainId(uint256)": {
            "details": "Add new chainId to list of supported Ids.",
            "params": {
              "chainId": "ChainId to add."
            }
          },
          "addSwapToken(address,uint256)": {
            "details": "Add Token to accept swaps from or increase supply of existing swap token.",
            "params": {
              "contractAddress": "Token Address to allow swaps.",
              "supplyIncrement": "Amount of assets allowed to be swapped (or incremental increase in amount)."
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "migrateBridgeRole(address)": {
            "details": "Provide Bridge Role (Admin Role) to new address.",
            "params": {
              "newBridgeRoleAddress": "New bridge role address."
            }
          },
          "mint(address,uint256,address,uint256,bytes32)": {
            "details": "Mint function used by bridge.  Optional FeeAddress and FeeAmount parameters used to mint small percentage of  transfered assets directly to bridge.",
            "params": {
              "amount": "Amount of funds to mint.",
              "feeAddress": "Address to mint bridge fees to.",
              "feeAmount": "Amount to mint as bridge fees.",
              "originTxId": "Transaction ID from external network that triggered this minting.",
              "to": "Address to mint funds to."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "removeSwapToken(address,uint256)": {
            "details": "Remove amount of swaps allowed from existing swap token.",
            "params": {
              "contractAddress": "Token Address to remove swap amount.",
              "supplyDecrement": "Amount to remove from the swap supply."
            }
          },
          "swap(address,uint256)": {
            "details": "Perform Swap.",
            "params": {
              "amount": "Amount of token to be swapped.",
              "token": "Address of token to be swapped."
            }
          },
          "swapSupply(address)": {
            "details": "Fetch the remaining amount allowed for a swap token.",
            "params": {
              "token": "Address of swap token."
            },
            "returns": {
              "_0": "amount of swaps remaining."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "unwrap(uint256,uint256)": {
            "details": "Burns assets and signals bridge to migrate funds to the same address on the provided chainId.",
            "params": {
              "amount": "Amount of asset to unwrap.",
              "chainId": "ChainId to unwrap or migrate funds to. Only used for multi-network bridge deployment.                Zero by default for bridge deployment with only 2 networks."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/test/BridgeToken.sol": "BridgeToken"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/contracts/test/BridgeToken.sol": {
        "keccak256": "0xc2a641dc875ec2787a2f258441fd74b0c232714017df271ca39eb5c81d823051",
        "urls": [
          "bzz-raw://d6aa4af6d3d72a7be6f3e1b8b982ea53d9c663ee5c600ae399f325b78983ca88",
          "dweb:/ipfs/QmdBRe7yxG8xyK2DoihnqzN64M6YkfAXhegetvJGew8Pir"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/test/BridgeToken.sol",
    "id": 17238,
    "exportedSymbols": {
      "BridgeToken": [
        17237
      ],
      "Context": [
        1147
      ],
      "ERC20": [
        978
      ],
      "ERC20Burnable": [
        1100
      ],
      "IERC20": [
        1056
      ],
      "IERC20Metadata": [
        1125
      ],
      "Roles": [
        16701
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8613:81",
    "nodes": [
      {
        "id": 16614,
        "nodeType": "PragmaDirective",
        "src": "32:23:81",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 16615,
        "nodeType": "ImportDirective",
        "src": "57:74:81",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17238,
        "sourceUnit": 1101,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16701,
        "nodeType": "ContractDefinition",
        "src": "133:851:81",
        "nodes": [
          {
            "id": 16620,
            "nodeType": "StructDefinition",
            "src": "153:60:81",
            "canonicalName": "Roles.Role",
            "members": [
              {
                "constant": false,
                "id": 16619,
                "mutability": "mutable",
                "name": "bearer",
                "nameLocation": "200:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 16620,
                "src": "175:31:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 16618,
                  "keyType": {
                    "id": 16616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "175:24:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 16617,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Role",
            "nameLocation": "160:4:81",
            "scope": 16701,
            "visibility": "public"
          },
          {
            "id": 16647,
            "nodeType": "FunctionDefinition",
            "src": "284:168:81",
            "body": {
              "id": 16646,
              "nodeType": "Block",
              "src": "342:110:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "360:19:81",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 16631,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16624,
                              "src": "365:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                                "typeString": "struct Roles.Role storage pointer"
                              }
                            },
                            {
                              "id": 16632,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16626,
                              "src": "371:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                                "typeString": "struct Roles.Role storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 16630,
                            "name": "has",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16700,
                            "src": "361:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                            }
                          },
                          "id": 16633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "361:18:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420616c72656164792068617320726f6c65",
                        "id": 16635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "381:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_420b9af7d3d3c1468d7dea6723d40cac3e798f7a1bffe565d79a3cb03eb3e579",
                          "typeString": "literal_string \"Account already has role\""
                        },
                        "value": "Account already has role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_420b9af7d3d3c1468d7dea6723d40cac3e798f7a1bffe565d79a3cb03eb3e579",
                          "typeString": "literal_string \"Account already has role\""
                        }
                      ],
                      "id": 16629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "352:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "352:56:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16637,
                  "nodeType": "ExpressionStatement",
                  "src": "352:56:81"
                },
                {
                  "expression": {
                    "id": 16644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 16638,
                          "name": "role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16624,
                          "src": "418:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                            "typeString": "struct Roles.Role storage pointer"
                          }
                        },
                        "id": 16641,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "423:6:81",
                        "memberName": "bearer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16619,
                        "src": "418:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 16642,
                      "indexExpression": {
                        "id": 16640,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16626,
                        "src": "430:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "418:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 16643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "441:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "418:27:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16645,
                  "nodeType": "ExpressionStatement",
                  "src": "418:27:81"
                }
              ]
            },
            "documentation": {
              "id": 16621,
              "nodeType": "StructuredDocumentation",
              "src": "219:60:81",
              "text": " @dev Give an account access to this role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "293:3:81",
            "parameters": {
              "id": 16627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16624,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "310:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16647,
                  "src": "297:17:81",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                    "typeString": "struct Roles.Role"
                  },
                  "typeName": {
                    "id": 16623,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16622,
                      "name": "Role",
                      "nameLocations": [
                        "297:4:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16620,
                      "src": "297:4:81"
                    },
                    "referencedDeclaration": 16620,
                    "src": "297:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                      "typeString": "struct Roles.Role"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16626,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "324:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16647,
                  "src": "316:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:36:81"
            },
            "returnParameters": {
              "id": 16628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:81"
            },
            "scope": 16701,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 16673,
            "nodeType": "FunctionDefinition",
            "src": "527:173:81",
            "body": {
              "id": 16672,
              "nodeType": "Block",
              "src": "588:112:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16658,
                            "name": "role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16651,
                            "src": "610:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                              "typeString": "struct Roles.Role storage pointer"
                            }
                          },
                          {
                            "id": 16659,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16653,
                            "src": "616:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                              "typeString": "struct Roles.Role storage pointer"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16657,
                          "name": "has",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16700,
                          "src": "606:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 16660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "606:18:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420646f6573206e6f74206861766520726f6c65",
                        "id": 16661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "626:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96f20cd15eac1e89da1737de01ba68a2894dfc9df30c56b82426ea49677d3e89",
                          "typeString": "literal_string \"Account does not have role\""
                        },
                        "value": "Account does not have role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96f20cd15eac1e89da1737de01ba68a2894dfc9df30c56b82426ea49677d3e89",
                          "typeString": "literal_string \"Account does not have role\""
                        }
                      ],
                      "id": 16656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "598:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:57:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16663,
                  "nodeType": "ExpressionStatement",
                  "src": "598:57:81"
                },
                {
                  "expression": {
                    "id": 16670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 16664,
                          "name": "role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16651,
                          "src": "665:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                            "typeString": "struct Roles.Role storage pointer"
                          }
                        },
                        "id": 16667,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "670:6:81",
                        "memberName": "bearer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16619,
                        "src": "665:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 16668,
                      "indexExpression": {
                        "id": 16666,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16653,
                        "src": "677:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "665:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 16669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "688:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "665:28:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16671,
                  "nodeType": "ExpressionStatement",
                  "src": "665:28:81"
                }
              ]
            },
            "documentation": {
              "id": 16648,
              "nodeType": "StructuredDocumentation",
              "src": "458:64:81",
              "text": " @dev Remove an account's access to this role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "536:6:81",
            "parameters": {
              "id": 16654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16651,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "556:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16673,
                  "src": "543:17:81",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                    "typeString": "struct Roles.Role"
                  },
                  "typeName": {
                    "id": 16650,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16649,
                      "name": "Role",
                      "nameLocations": [
                        "543:4:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16620,
                      "src": "543:4:81"
                    },
                    "referencedDeclaration": 16620,
                    "src": "543:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                      "typeString": "struct Roles.Role"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16653,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "570:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16673,
                  "src": "562:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "542:36:81"
            },
            "returnParameters": {
              "id": 16655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:81"
            },
            "scope": 16701,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 16700,
            "nodeType": "FunctionDefinition",
            "src": "789:193:81",
            "body": {
              "id": 16699,
              "nodeType": "Block",
              "src": "867:115:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16685,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16679,
                          "src": "885:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "904:1:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "896:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "896:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "896:10:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "885:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420697320746865207a65726f2061646472657373",
                        "id": 16691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "908:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0e507d61d28cbf01352b60a3a4f2b687b7c9408fe6e0def3aab31904b3c06ca",
                          "typeString": "literal_string \"Account is the zero address\""
                        },
                        "value": "Account is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0e507d61d28cbf01352b60a3a4f2b687b7c9408fe6e0def3aab31904b3c06ca",
                          "typeString": "literal_string \"Account is the zero address\""
                        }
                      ],
                      "id": 16684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "877:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:61:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16693,
                  "nodeType": "ExpressionStatement",
                  "src": "877:61:81"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 16694,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16677,
                        "src": "955:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                          "typeString": "struct Roles.Role storage pointer"
                        }
                      },
                      "id": 16695,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "960:6:81",
                      "memberName": "bearer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16619,
                      "src": "955:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 16697,
                    "indexExpression": {
                      "id": 16696,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16679,
                      "src": "967:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "955:20:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16683,
                  "id": 16698,
                  "nodeType": "Return",
                  "src": "948:27:81"
                }
              ]
            },
            "documentation": {
              "id": 16674,
              "nodeType": "StructuredDocumentation",
              "src": "706:78:81",
              "text": " @dev Check if an account has this role.\n @return bool"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "has",
            "nameLocation": "798:3:81",
            "parameters": {
              "id": 16680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16677,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "815:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16700,
                  "src": "802:17:81",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                    "typeString": "struct Roles.Role"
                  },
                  "typeName": {
                    "id": 16676,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16675,
                      "name": "Role",
                      "nameLocations": [
                        "802:4:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16620,
                      "src": "802:4:81"
                    },
                    "referencedDeclaration": 16620,
                    "src": "802:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                      "typeString": "struct Roles.Role"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16679,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "829:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16700,
                  "src": "821:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:36:81"
            },
            "returnParameters": {
              "id": 16683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16682,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16700,
                  "src": "861:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16681,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:6:81"
            },
            "scope": 16701,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Roles",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16701
        ],
        "name": "Roles",
        "nameLocation": "141:5:81",
        "scope": 17238,
        "usedErrors": []
      },
      {
        "id": 17237,
        "nodeType": "ContractDefinition",
        "src": "986:7658:81",
        "nodes": [
          {
            "id": 16707,
            "nodeType": "UsingForDirective",
            "src": "1030:27:81",
            "global": false,
            "libraryName": {
              "id": 16704,
              "name": "Roles",
              "nameLocations": [
                "1036:5:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16701,
              "src": "1036:5:81"
            },
            "typeName": {
              "id": 16706,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16705,
                "name": "Roles.Role",
                "nameLocations": [
                  "1046:5:81",
                  "1052:4:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16620,
                "src": "1046:10:81"
              },
              "referencedDeclaration": 16620,
              "src": "1046:10:81",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                "typeString": "struct Roles.Role"
              }
            }
          },
          {
            "id": 16710,
            "nodeType": "VariableDeclaration",
            "src": "1063:30:81",
            "constant": false,
            "mutability": "mutable",
            "name": "bridgeRoles",
            "nameLocation": "1082:11:81",
            "scope": 17237,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Role_$16620_storage",
              "typeString": "struct Roles.Role"
            },
            "typeName": {
              "id": 16709,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16708,
                "name": "Roles.Role",
                "nameLocations": [
                  "1063:5:81",
                  "1069:4:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16620,
                "src": "1063:10:81"
              },
              "referencedDeclaration": 16620,
              "src": "1063:10:81",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Role_$16620_storage_ptr",
                "typeString": "struct Roles.Role"
              }
            },
            "visibility": "private"
          },
          {
            "id": 16712,
            "nodeType": "VariableDeclaration",
            "src": "1100:25:81",
            "constant": false,
            "mutability": "mutable",
            "name": "TOKEN_NAME",
            "nameLocation": "1115:10:81",
            "scope": 17237,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16711,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1100:6:81",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 16714,
            "nodeType": "VariableDeclaration",
            "src": "1131:27:81",
            "constant": false,
            "mutability": "mutable",
            "name": "TOKEN_SYMBOL",
            "nameLocation": "1146:12:81",
            "scope": 17237,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16713,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1131:6:81",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 16717,
            "nodeType": "VariableDeclaration",
            "src": "1164:42:81",
            "constant": true,
            "mutability": "constant",
            "name": "TOKEN_DECIMALS",
            "nameLocation": "1187:14:81",
            "scope": 17237,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 16715,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1164:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 16716,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1204:2:81",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "private"
          },
          {
            "id": 16722,
            "nodeType": "StructDefinition",
            "src": "1213:79:81",
            "canonicalName": "BridgeToken.SwapToken",
            "members": [
              {
                "constant": false,
                "id": 16719,
                "mutability": "mutable",
                "name": "tokenContract",
                "nameLocation": "1248:13:81",
                "nodeType": "VariableDeclaration",
                "scope": 16722,
                "src": "1240:21:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 16718,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1240:7:81",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16721,
                "mutability": "mutable",
                "name": "supply",
                "nameLocation": "1279:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 16722,
                "src": "1271:14:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16720,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1271:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapToken",
            "nameLocation": "1220:9:81",
            "scope": 17237,
            "visibility": "public"
          },
          {
            "id": 16727,
            "nodeType": "VariableDeclaration",
            "src": "1297:47:81",
            "constant": false,
            "functionSelector": "0fcf41ae",
            "mutability": "mutable",
            "name": "swapTokens",
            "nameLocation": "1334:10:81",
            "scope": 17237,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
              "typeString": "mapping(address => struct BridgeToken.SwapToken)"
            },
            "typeName": {
              "id": 16726,
              "keyType": {
                "id": 16723,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1305:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1297:29:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                "typeString": "mapping(address => struct BridgeToken.SwapToken)"
              },
              "valueType": {
                "id": 16725,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 16724,
                  "name": "SwapToken",
                  "nameLocations": [
                    "1316:9:81"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16722,
                  "src": "1316:9:81"
                },
                "referencedDeclaration": 16722,
                "src": "1316:9:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SwapToken_$16722_storage_ptr",
                  "typeString": "struct BridgeToken.SwapToken"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 16731,
            "nodeType": "VariableDeclaration",
            "src": "1351:40:81",
            "constant": false,
            "functionSelector": "21d93090",
            "mutability": "mutable",
            "name": "chainIds",
            "nameLocation": "1383:8:81",
            "scope": 17237,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 16730,
              "keyType": {
                "id": 16728,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1359:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1351:24:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 16729,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1370:4:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 16743,
            "nodeType": "EventDefinition",
            "src": "1398:98:81",
            "anonymous": false,
            "eventSelector": "918d77674bb88eaf75afb307c9723ea6037706de68d6fc07dd0c6cba423a5250",
            "name": "Mint",
            "nameLocation": "1404:4:81",
            "parameters": {
              "id": 16742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16733,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1417:2:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16743,
                  "src": "1409:10:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16735,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1429:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16743,
                  "src": "1421:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeAddress",
                  "nameLocation": "1445:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16743,
                  "src": "1437:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16739,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "1465:9:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16743,
                  "src": "1457:17:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16741,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "originTxId",
                  "nameLocation": "1484:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16743,
                  "src": "1476:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16740,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:87:81"
            }
          },
          {
            "id": 16749,
            "nodeType": "EventDefinition",
            "src": "1501:46:81",
            "anonymous": false,
            "eventSelector": "37a06799a3500428a773d00284aa706101f5ad94dae9ec37e1c3773aa54c3304",
            "name": "Unwrap",
            "nameLocation": "1507:6:81",
            "parameters": {
              "id": 16748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16745,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1522:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16749,
                  "src": "1514:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16747,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "1538:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16749,
                  "src": "1530:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1513:33:81"
            }
          },
          {
            "id": 16753,
            "nodeType": "EventDefinition",
            "src": "1552:43:81",
            "anonymous": false,
            "eventSelector": "677e2d9a4ed9201aa86725fef875137fc53876e6b68036b974404762682bd122",
            "name": "AddSupportedChainId",
            "nameLocation": "1558:19:81",
            "parameters": {
              "id": 16752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16751,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "1586:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16753,
                  "src": "1578:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:17:81"
            }
          },
          {
            "id": 16757,
            "nodeType": "EventDefinition",
            "src": "1600:54:81",
            "anonymous": false,
            "eventSelector": "871b00a4e20f8436702d0174eb87d84d7cd1dd5c34d4bb1b4e75438b3398d512",
            "name": "MigrateBridgeRole",
            "nameLocation": "1606:17:81",
            "parameters": {
              "id": 16756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16755,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBridgeRoleAddress",
                  "nameLocation": "1632:20:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16757,
                  "src": "1624:28:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1623:30:81"
            }
          },
          {
            "id": 16763,
            "nodeType": "EventDefinition",
            "src": "1659:69:81",
            "anonymous": false,
            "eventSelector": "3e4fdfb0f47da284fe8b5b3a7e5d10b211e323c9a0c144c421ae1d211873f853",
            "name": "AddSwapToken",
            "nameLocation": "1665:12:81",
            "parameters": {
              "id": 16762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16759,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1686:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16763,
                  "src": "1678:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16761,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyIncrement",
                  "nameLocation": "1711:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16763,
                  "src": "1703:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:50:81"
            }
          },
          {
            "id": 16769,
            "nodeType": "EventDefinition",
            "src": "1733:72:81",
            "anonymous": false,
            "eventSelector": "d3b4025ff115b79bf2ec5a73c9c784ba8aa9f8f6ba9186b255895c1a9f9042a3",
            "name": "RemoveSwapToken",
            "nameLocation": "1739:15:81",
            "parameters": {
              "id": 16768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16765,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1763:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16769,
                  "src": "1755:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16767,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyDecrement",
                  "nameLocation": "1788:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16769,
                  "src": "1780:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:50:81"
            }
          },
          {
            "id": 16775,
            "nodeType": "EventDefinition",
            "src": "1810:42:81",
            "anonymous": false,
            "eventSelector": "562c219552544ec4c9d7a8eb850f80ea152973e315372bf4999fe7c953ea004f",
            "name": "Swap",
            "nameLocation": "1816:4:81",
            "parameters": {
              "id": 16774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16771,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1829:5:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16775,
                  "src": "1821:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1821:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16773,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1844:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16775,
                  "src": "1836:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1820:31:81"
            }
          },
          {
            "id": 16808,
            "nodeType": "FunctionDefinition",
            "src": "1858:240:81",
            "body": {
              "id": 16807,
              "nodeType": "Block",
              "src": "1956:142:81",
              "statements": [
                {
                  "expression": {
                    "id": 16788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16786,
                      "name": "TOKEN_NAME",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16712,
                      "src": "1966:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 16787,
                      "name": "_tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16777,
                      "src": "1979:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1966:23:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 16789,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:23:81"
                },
                {
                  "expression": {
                    "id": 16792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16790,
                      "name": "TOKEN_SYMBOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16714,
                      "src": "1999:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 16791,
                      "name": "_tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16779,
                      "src": "2014:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1999:27:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 16793,
                  "nodeType": "ExpressionStatement",
                  "src": "1999:27:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16797,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2052:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2056:6:81",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2052:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16794,
                        "name": "bridgeRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16710,
                        "src": "2036:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$16620_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 16796,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2048:3:81",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16647,
                      "src": "2036:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address)"
                      }
                    },
                    "id": 16799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16800,
                  "nodeType": "ExpressionStatement",
                  "src": "2036:27:81"
                },
                {
                  "expression": {
                    "id": 16805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16801,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16731,
                        "src": "2073:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 16803,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 16802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2082:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2073:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 16804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2087:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2073:18:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16806,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:18:81"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 16782,
                    "name": "_tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16777,
                    "src": "1930:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 16783,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16779,
                    "src": "1942:12:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 16784,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 16781,
                  "name": "ERC20",
                  "nameLocations": [
                    "1924:5:81"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 978,
                  "src": "1924:5:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "1924:31:81"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16777,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "1884:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16808,
                  "src": "1870:24:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16779,
                  "mutability": "mutable",
                  "name": "_tokenSymbol",
                  "nameLocation": "1910:12:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16808,
                  "src": "1896:26:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1869:54:81"
            },
            "returnParameters": {
              "id": 16785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16817,
            "nodeType": "FunctionDefinition",
            "src": "2104:103:81",
            "body": {
              "id": 16816,
              "nodeType": "Block",
              "src": "2169:38:81",
              "statements": [
                {
                  "expression": {
                    "id": 16814,
                    "name": "TOKEN_DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16717,
                    "src": "2186:14:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 16813,
                  "id": 16815,
                  "nodeType": "Return",
                  "src": "2179:21:81"
                }
              ]
            },
            "baseFunctions": [
              467
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2113:8:81",
            "overrides": {
              "id": 16810,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2144:8:81"
            },
            "parameters": {
              "id": 16809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:2:81"
            },
            "returnParameters": {
              "id": 16813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16817,
                  "src": "2162:5:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 16811,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2162:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2161:7:81"
            },
            "scope": 17237,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 16864,
            "nodeType": "FunctionDefinition",
            "src": "2752:398:81",
            "body": {
              "id": 16863,
              "nodeType": "Block",
              "src": "2906:244:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16834,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2940:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2944:6:81",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2940:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 16832,
                            "name": "bridgeRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16710,
                            "src": "2924:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$16620_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 16833,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2936:3:81",
                          "memberName": "has",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16700,
                          "src": "2924:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 16836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2924:27:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a65642e",
                        "id": 16837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        },
                        "value": "Unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        }
                      ],
                      "id": 16831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2916:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:53:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16839,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:53:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16841,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16820,
                        "src": "2985:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16842,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16822,
                        "src": "2989:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16840,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "2979:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:17:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16844,
                  "nodeType": "ExpressionStatement",
                  "src": "2979:17:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16845,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16826,
                      "src": "3010:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 16846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3022:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3010:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16854,
                  "nodeType": "IfStatement",
                  "src": "3006:72:81",
                  "trueBody": {
                    "id": 16853,
                    "nodeType": "Block",
                    "src": "3025:53:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 16849,
                              "name": "feeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16824,
                              "src": "3045:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 16850,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16826,
                              "src": "3057:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16848,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "3039:5:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 16851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3039:28:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16852,
                        "nodeType": "ExpressionStatement",
                        "src": "3039:28:81"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16820,
                        "src": "3097:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16822,
                        "src": "3101:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16858,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16824,
                        "src": "3109:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16859,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16826,
                        "src": "3121:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16860,
                        "name": "originTxId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16828,
                        "src": "3132:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 16855,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16743,
                      "src": "3092:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,bytes32)"
                      }
                    },
                    "id": 16861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:51:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16862,
                  "nodeType": "EmitStatement",
                  "src": "3087:56:81"
                }
              ]
            },
            "documentation": {
              "id": 16818,
              "nodeType": "StructuredDocumentation",
              "src": "2213:534:81",
              "text": " @dev Mint function used by bridge. \nOptional FeeAddress and FeeAmount parameters used to mint small percentage of \ntransfered assets directly to bridge.\n @param to Address to mint funds to.\n @param amount Amount of funds to mint.\n @param feeAddress Address to mint bridge fees to.\n @param feeAmount Amount to mint as bridge fees.\n @param feeAmount Amount to mint as bridge fees.\n @param originTxId Transaction ID from external network that triggered this minting."
            },
            "functionSelector": "67fc19bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2761:4:81",
            "parameters": {
              "id": 16829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16820,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2783:2:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16864,
                  "src": "2775:10:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2775:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16822,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2803:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16864,
                  "src": "2795:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16824,
                  "mutability": "mutable",
                  "name": "feeAddress",
                  "nameLocation": "2827:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16864,
                  "src": "2819:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16826,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "2855:9:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16864,
                  "src": "2847:17:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16828,
                  "mutability": "mutable",
                  "name": "originTxId",
                  "nameLocation": "2882:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16864,
                  "src": "2874:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16827,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2765:133:81"
            },
            "returnParameters": {
              "id": 16830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2906:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16909,
            "nodeType": "FunctionDefinition",
            "src": "3264:570:81",
            "body": {
              "id": 16908,
              "nodeType": "Block",
              "src": "3317:517:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16873,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3351:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3355:6:81",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3351:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 16871,
                            "name": "bridgeRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16710,
                            "src": "3335:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$16620_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 16872,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3347:3:81",
                          "memberName": "has",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16700,
                          "src": "3335:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 16875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3335:27:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a65642e",
                        "id": 16876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3364:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        },
                        "value": "Unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        }
                      ],
                      "id": 16870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3327:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3327:53:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16878,
                  "nodeType": "ExpressionStatement",
                  "src": "3327:53:81"
                },
                {
                  "assignments": [
                    16880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16880,
                      "mutability": "mutable",
                      "name": "currentChainId",
                      "nameLocation": "3481:14:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 16908,
                      "src": "3473:22:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16879,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3473:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16881,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3473:22:81"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3514:51:81",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3528:27:81",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "3546:7:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3546:9:81"
                        },
                        "variableNames": [
                          {
                            "name": "currentChainId",
                            "nodeType": "YulIdentifier",
                            "src": "3528:14:81"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 16880,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3528:14:81",
                      "valueSize": 1
                    }
                  ],
                  "id": 16882,
                  "nodeType": "InlineAssembly",
                  "src": "3505:60:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16884,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16867,
                          "src": "3582:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 16885,
                          "name": "currentChainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16880,
                          "src": "3593:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3582:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206164642063757272656e7420636861696e2049442e",
                        "id": 16887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3609:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4347e853352fc6112fc4868eb8ca646e3e53fd238f8466a81e4e72b3a336e37",
                          "typeString": "literal_string \"Cannot add current chain ID.\""
                        },
                        "value": "Cannot add current chain ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4347e853352fc6112fc4868eb8ca646e3e53fd238f8466a81e4e72b3a336e37",
                          "typeString": "literal_string \"Cannot add current chain ID.\""
                        }
                      ],
                      "id": 16883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3574:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3574:66:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16889,
                  "nodeType": "ExpressionStatement",
                  "src": "3574:66:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 16894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 16890,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16731,
                        "src": "3692:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 16892,
                      "indexExpression": {
                        "id": 16891,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16867,
                        "src": "3701:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3692:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 16893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3713:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3692:25:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16897,
                  "nodeType": "IfStatement",
                  "src": "3688:62:81",
                  "trueBody": {
                    "id": 16896,
                    "nodeType": "Block",
                    "src": "3719:31:81",
                    "statements": [
                      {
                        "functionReturnParameters": 16869,
                        "id": 16895,
                        "nodeType": "Return",
                        "src": "3733:7:81"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 16902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16898,
                        "name": "chainIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16731,
                        "src": "3760:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 16900,
                      "indexExpression": {
                        "id": 16899,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16867,
                        "src": "3769:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3760:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 16901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3780:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3760:24:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16903,
                  "nodeType": "ExpressionStatement",
                  "src": "3760:24:81"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16905,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16867,
                        "src": "3819:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16904,
                      "name": "AddSupportedChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16753,
                      "src": "3799:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 16906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3799:28:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16907,
                  "nodeType": "EmitStatement",
                  "src": "3794:33:81"
                }
              ]
            },
            "documentation": {
              "id": 16865,
              "nodeType": "StructuredDocumentation",
              "src": "3156:103:81",
              "text": " @dev Add new chainId to list of supported Ids.\n @param chainId ChainId to add."
            },
            "functionSelector": "66de3b36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSupportedChainId",
            "nameLocation": "3273:19:81",
            "parameters": {
              "id": 16868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16867,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "3301:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16909,
                  "src": "3293:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3292:17:81"
            },
            "returnParameters": {
              "id": 16869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3317:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16947,
            "nodeType": "FunctionDefinition",
            "src": "4200:322:81",
            "body": {
              "id": 16946,
              "nodeType": "Block",
              "src": "4256:266:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16918,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "4274:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 16919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4277:6:81",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "4274:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 16920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4287:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4291:6:81",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4287:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4274:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742063616c6c73206e6f7420737570706f727465642e",
                        "id": 16923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4299:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08fbf4982d3e7cb593323873d51752457503c546b991daf1b4ff182b255ed8e6",
                          "typeString": "literal_string \"Contract calls not supported.\""
                        },
                        "value": "Contract calls not supported."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08fbf4982d3e7cb593323873d51752457503c546b991daf1b4ff182b255ed8e6",
                          "typeString": "literal_string \"Contract calls not supported.\""
                        }
                      ],
                      "id": 16917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4266:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4266:65:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16925,
                  "nodeType": "ExpressionStatement",
                  "src": "4266:65:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 16927,
                            "name": "chainIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16731,
                            "src": "4389:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 16929,
                          "indexExpression": {
                            "id": 16928,
                            "name": "chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16914,
                            "src": "4398:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4389:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 16930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4410:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4389:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436861696e204944206e6f7420737570706f727465642e",
                        "id": 16932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4416:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_793c9892b686151c2016bd69162cce60f79273ec65974a99cbe11bccb27809bb",
                          "typeString": "literal_string \"Chain ID not supported.\""
                        },
                        "value": "Chain ID not supported."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_793c9892b686151c2016bd69162cce60f79273ec65974a99cbe11bccb27809bb",
                          "typeString": "literal_string \"Chain ID not supported.\""
                        }
                      ],
                      "id": 16926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4381:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:61:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16934,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:61:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16936,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4458:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4462:6:81",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4458:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16938,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16912,
                        "src": "4470:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16935,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "4452:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4452:25:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16940,
                  "nodeType": "ExpressionStatement",
                  "src": "4452:25:81"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16942,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16912,
                        "src": "4499:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16943,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16914,
                        "src": "4507:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16941,
                      "name": "Unwrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16749,
                      "src": "4492:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 16944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4492:23:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16945,
                  "nodeType": "EmitStatement",
                  "src": "4487:28:81"
                }
              ]
            },
            "documentation": {
              "id": 16910,
              "nodeType": "StructuredDocumentation",
              "src": "3840:355:81",
              "text": " @dev Burns assets and signals bridge to migrate funds to the same address on the provided chainId.\n @param amount Amount of asset to unwrap.\n @param chainId ChainId to unwrap or migrate funds to. Only used for multi-network bridge deployment.\n                Zero by default for bridge deployment with only 2 networks."
            },
            "functionSelector": "6e286671",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nameLocation": "4209:6:81",
            "parameters": {
              "id": 16915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16912,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4224:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16947,
                  "src": "4216:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4216:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16914,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "4240:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16947,
                  "src": "4232:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4232:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4215:33:81"
            },
            "returnParameters": {
              "id": 16916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4256:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16980,
            "nodeType": "FunctionDefinition",
            "src": "4665:275:81",
            "body": {
              "id": 16979,
              "nodeType": "Block",
              "src": "4729:211:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16956,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4763:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4767:6:81",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4763:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 16954,
                            "name": "bridgeRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16710,
                            "src": "4747:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$16620_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 16955,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4759:3:81",
                          "memberName": "has",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16700,
                          "src": "4747:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 16958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4747:27:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a65642e",
                        "id": 16959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4776:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        },
                        "value": "Unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        }
                      ],
                      "id": 16953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4739:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4739:53:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16961,
                  "nodeType": "ExpressionStatement",
                  "src": "4739:53:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4821:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4825:6:81",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4821:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16962,
                        "name": "bridgeRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16710,
                        "src": "4802:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$16620_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 16964,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4814:6:81",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16673,
                      "src": "4802:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address)"
                      }
                    },
                    "id": 16967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4802:30:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16968,
                  "nodeType": "ExpressionStatement",
                  "src": "4802:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16972,
                        "name": "newBridgeRoleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16950,
                        "src": "4858:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16969,
                        "name": "bridgeRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16710,
                        "src": "4842:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$16620_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 16971,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4854:3:81",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16647,
                      "src": "4842:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address)"
                      }
                    },
                    "id": 16973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16974,
                  "nodeType": "ExpressionStatement",
                  "src": "4842:37:81"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 16976,
                        "name": "newBridgeRoleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16950,
                        "src": "4912:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16975,
                      "name": "MigrateBridgeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16757,
                      "src": "4894:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4894:39:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16978,
                  "nodeType": "EmitStatement",
                  "src": "4889:44:81"
                }
              ]
            },
            "documentation": {
              "id": 16948,
              "nodeType": "StructuredDocumentation",
              "src": "4528:132:81",
              "text": " @dev Provide Bridge Role (Admin Role) to new address.\n @param newBridgeRoleAddress New bridge role address."
            },
            "functionSelector": "5d9898d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateBridgeRole",
            "nameLocation": "4674:17:81",
            "parameters": {
              "id": 16951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16950,
                  "mutability": "mutable",
                  "name": "newBridgeRoleAddress",
                  "nameLocation": "4700:20:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 16980,
                  "src": "4692:28:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4692:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4691:30:81"
            },
            "returnParameters": {
              "id": 16952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4729:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17043,
            "nodeType": "FunctionDefinition",
            "src": "5214:756:81",
            "body": {
              "id": 17042,
              "nodeType": "Block",
              "src": "5293:677:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16991,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5327:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5331:6:81",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5327:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 16989,
                            "name": "bridgeRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16710,
                            "src": "5311:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$16620_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 16990,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5323:3:81",
                          "memberName": "has",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16700,
                          "src": "5311:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 16993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5311:27:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a65642e",
                        "id": 16994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5340:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        },
                        "value": "Unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
                          "typeString": "literal_string \"Unauthorized.\""
                        }
                      ],
                      "id": 16988,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5303:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5303:53:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16996,
                  "nodeType": "ExpressionStatement",
                  "src": "5303:53:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16999,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16983,
                            "src": "5385:15:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 16998,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17223,
                          "src": "5374:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 17000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5374:27:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973206e6f7420636f6e74726163742e",
                        "id": 17001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5403:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a6dd94caa598fe86c617cecfe9289af5dbadedbe077dcdbd38fdf5418b1f3a5",
                          "typeString": "literal_string \"Address is not contract.\""
                        },
                        "value": "Address is not contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a6dd94caa598fe86c617cecfe9289af5dbadedbe077dcdbd38fdf5418b1f3a5",
                          "typeString": "literal_string \"Address is not contract.\""
                        }
                      ],
                      "id": 16997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5366:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5366:64:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17003,
                  "nodeType": "ExpressionStatement",
                  "src": "5366:64:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 17012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 17004,
                          "name": "swapTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16727,
                          "src": "5601:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                            "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                          }
                        },
                        "id": 17006,
                        "indexExpression": {
                          "id": 17005,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16983,
                          "src": "5612:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5601:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                          "typeString": "struct BridgeToken.SwapToken storage ref"
                        }
                      },
                      "id": 17007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5629:13:81",
                      "memberName": "tokenContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16719,
                      "src": "5601:41:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 17010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5654:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 17009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5646:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 17008,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5646:7:81",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 17011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5646:10:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5601:55:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 17035,
                    "nodeType": "Block",
                    "src": "5789:114:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 17033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 17023,
                                "name": "swapTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16727,
                                "src": "5803:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                  "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                                }
                              },
                              "id": 17025,
                              "indexExpression": {
                                "id": 17024,
                                "name": "contractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16983,
                                "src": "5814:15:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5803:27:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                                "typeString": "struct BridgeToken.SwapToken storage ref"
                              }
                            },
                            "id": 17026,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5831:6:81",
                            "memberName": "supply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16721,
                            "src": "5803:34:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 17032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 17027,
                                  "name": "swapTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16727,
                                  "src": "5840:10:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                    "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                                  }
                                },
                                "id": 17029,
                                "indexExpression": {
                                  "id": 17028,
                                  "name": "contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16983,
                                  "src": "5851:15:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5840:27:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                                  "typeString": "struct BridgeToken.SwapToken storage ref"
                                }
                              },
                              "id": 17030,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5868:6:81",
                              "memberName": "supply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16721,
                              "src": "5840:34:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 17031,
                              "name": "supplyIncrement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16985,
                              "src": "5877:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5840:52:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5803:89:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 17034,
                        "nodeType": "ExpressionStatement",
                        "src": "5803:89:81"
                      }
                    ]
                  },
                  "id": 17036,
                  "nodeType": "IfStatement",
                  "src": "5597:306:81",
                  "trueBody": {
                    "id": 17022,
                    "nodeType": "Block",
                    "src": "5658:125:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 17020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 17013,
                              "name": "swapTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16727,
                              "src": "5672:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                              }
                            },
                            "id": 17015,
                            "indexExpression": {
                              "id": 17014,
                              "name": "contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16983,
                              "src": "5683:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5672:27:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                              "typeString": "struct BridgeToken.SwapToken storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 17017,
                                "name": "contractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16983,
                                "src": "5729:15:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 17018,
                                "name": "supplyIncrement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16985,
                                "src": "5754:15:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 17016,
                              "name": "SwapToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16722,
                              "src": "5702:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SwapToken_$16722_storage_ptr_$",
                                "typeString": "type(struct BridgeToken.SwapToken storage pointer)"
                              }
                            },
                            "id": 17019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "5714:13:81",
                              "5746:6:81"
                            ],
                            "names": [
                              "tokenContract",
                              "supply"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "5702:70:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapToken_$16722_memory_ptr",
                              "typeString": "struct BridgeToken.SwapToken memory"
                            }
                          },
                          "src": "5672:100:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                            "typeString": "struct BridgeToken.SwapToken storage ref"
                          }
                        },
                        "id": 17021,
                        "nodeType": "ExpressionStatement",
                        "src": "5672:100:81"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17038,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16983,
                        "src": "5930:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17039,
                        "name": "supplyIncrement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16985,
                        "src": "5947:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17037,
                      "name": "AddSwapToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16763,
                      "src": "5917:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5917:46:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17041,
                  "nodeType": "EmitStatement",
                  "src": "5912:51:81"
                }
              ]
            },
            "documentation": {
              "id": 16981,
              "nodeType": "StructuredDocumentation",
              "src": "4946:263:81",
              "text": " @dev Add Token to accept swaps from or increase supply of existing swap token.\n @param contractAddress Token Address to allow swaps.\n @param supplyIncrement Amount of assets allowed to be swapped (or incremental increase in amount)."
            },
            "functionSelector": "eff03830",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSwapToken",
            "nameLocation": "5223:12:81",
            "parameters": {
              "id": 16986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16983,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "5244:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17043,
                  "src": "5236:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5236:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16985,
                  "mutability": "mutable",
                  "name": "supplyIncrement",
                  "nameLocation": "5269:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17043,
                  "src": "5261:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5235:50:81"
            },
            "returnParameters": {
              "id": 16987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5293:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17112,
            "nodeType": "FunctionDefinition",
            "src": "6197:850:81",
            "body": {
              "id": 17111,
              "nodeType": "Block",
              "src": "6279:768:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 17054,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6313:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 17055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6317:6:81",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6313:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 17052,
                            "name": "bridgeRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16710,
                            "src": "6297:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Role_$16620_storage",
                              "typeString": "struct Roles.Role storage ref"
                            }
                          },
                          "id": 17053,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6309:3:81",
                          "memberName": "has",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16700,
                          "src": "6297:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$16620_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$16620_storage_ptr_$",
                            "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 17056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6297:27:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 17057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6326:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 17051,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6289:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6289:52:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17059,
                  "nodeType": "ExpressionStatement",
                  "src": "6289:52:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 17062,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17046,
                            "src": "6370:15:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17061,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17223,
                          "src": "6359:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 17063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6359:27:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973206e6f7420636f6e74726163742e",
                        "id": 17064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6388:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a6dd94caa598fe86c617cecfe9289af5dbadedbe077dcdbd38fdf5418b1f3a5",
                          "typeString": "literal_string \"Address is not contract.\""
                        },
                        "value": "Address is not contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a6dd94caa598fe86c617cecfe9289af5dbadedbe077dcdbd38fdf5418b1f3a5",
                          "typeString": "literal_string \"Address is not contract.\""
                        }
                      ],
                      "id": 17060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6351:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6351:64:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17066,
                  "nodeType": "ExpressionStatement",
                  "src": "6351:64:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 17068,
                              "name": "swapTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16727,
                              "src": "6433:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                              }
                            },
                            "id": 17070,
                            "indexExpression": {
                              "id": 17069,
                              "name": "contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17046,
                              "src": "6444:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6433:27:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                              "typeString": "struct BridgeToken.SwapToken storage ref"
                            }
                          },
                          "id": 17071,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6461:13:81",
                          "memberName": "tokenContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16719,
                          "src": "6433:41:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6486:1:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6478:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17072,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6478:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6478:10:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6433:55:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020746f6b656e206e6f7420737570706f72746564",
                        "id": 17077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6490:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa084ce74a15e67c878ead08a50e6a44f4a15241cc280067bab192b4a67e6e54",
                          "typeString": "literal_string \"Swap token not supported\""
                        },
                        "value": "Swap token not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa084ce74a15e67c878ead08a50e6a44f4a15241cc280067bab192b4a67e6e54",
                          "typeString": "literal_string \"Swap token not supported\""
                        }
                      ],
                      "id": 17067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6425:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6425:92:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17079,
                  "nodeType": "ExpressionStatement",
                  "src": "6425:92:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 17080,
                          "name": "swapTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16727,
                          "src": "6744:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                            "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                          }
                        },
                        "id": 17082,
                        "indexExpression": {
                          "id": 17081,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17046,
                          "src": "6755:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6744:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                          "typeString": "struct BridgeToken.SwapToken storage ref"
                        }
                      },
                      "id": 17083,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6772:6:81",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16721,
                      "src": "6744:34:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 17084,
                      "name": "supplyDecrement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17048,
                      "src": "6781:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6744:52:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 17104,
                    "nodeType": "Block",
                    "src": "6918:59:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 17102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6932:34:81",
                          "subExpression": {
                            "baseExpression": {
                              "id": 17099,
                              "name": "swapTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16727,
                              "src": "6939:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                              }
                            },
                            "id": 17101,
                            "indexExpression": {
                              "id": 17100,
                              "name": "contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17046,
                              "src": "6950:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6939:27:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                              "typeString": "struct BridgeToken.SwapToken storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17103,
                        "nodeType": "ExpressionStatement",
                        "src": "6932:34:81"
                      }
                    ]
                  },
                  "id": 17105,
                  "nodeType": "IfStatement",
                  "src": "6740:237:81",
                  "trueBody": {
                    "id": 17098,
                    "nodeType": "Block",
                    "src": "6798:114:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 17096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 17086,
                                "name": "swapTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16727,
                                "src": "6812:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                  "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                                }
                              },
                              "id": 17088,
                              "indexExpression": {
                                "id": 17087,
                                "name": "contractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17046,
                                "src": "6823:15:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6812:27:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                                "typeString": "struct BridgeToken.SwapToken storage ref"
                              }
                            },
                            "id": 17089,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6840:6:81",
                            "memberName": "supply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16721,
                            "src": "6812:34:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 17095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 17090,
                                  "name": "swapTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16727,
                                  "src": "6849:10:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                    "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                                  }
                                },
                                "id": 17092,
                                "indexExpression": {
                                  "id": 17091,
                                  "name": "contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17046,
                                  "src": "6860:15:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6849:27:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                                  "typeString": "struct BridgeToken.SwapToken storage ref"
                                }
                              },
                              "id": 17093,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6877:6:81",
                              "memberName": "supply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16721,
                              "src": "6849:34:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 17094,
                              "name": "supplyDecrement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17048,
                              "src": "6886:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6849:52:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6812:89:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 17097,
                        "nodeType": "ExpressionStatement",
                        "src": "6812:89:81"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17107,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17046,
                        "src": "7007:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17108,
                        "name": "supplyDecrement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17048,
                        "src": "7024:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17106,
                      "name": "RemoveSwapToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16769,
                      "src": "6991:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6991:49:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17110,
                  "nodeType": "EmitStatement",
                  "src": "6986:54:81"
                }
              ]
            },
            "documentation": {
              "id": 17044,
              "nodeType": "StructuredDocumentation",
              "src": "5976:216:81",
              "text": " @dev Remove amount of swaps allowed from existing swap token.\n @param contractAddress Token Address to remove swap amount.\n @param supplyDecrement Amount to remove from the swap supply."
            },
            "functionSelector": "7c38b457",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeSwapToken",
            "nameLocation": "6206:15:81",
            "parameters": {
              "id": 17049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17046,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "6230:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17112,
                  "src": "6222:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6222:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17048,
                  "mutability": "mutable",
                  "name": "supplyDecrement",
                  "nameLocation": "6255:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17112,
                  "src": "6247:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6247:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6221:50:81"
            },
            "returnParameters": {
              "id": 17050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6279:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17126,
            "nodeType": "FunctionDefinition",
            "src": "7219:113:81",
            "body": {
              "id": 17125,
              "nodeType": "Block",
              "src": "7284:48:81",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 17120,
                        "name": "swapTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16727,
                        "src": "7301:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                          "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                        }
                      },
                      "id": 17122,
                      "indexExpression": {
                        "id": 17121,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17115,
                        "src": "7312:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7301:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                        "typeString": "struct BridgeToken.SwapToken storage ref"
                      }
                    },
                    "id": 17123,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7319:6:81",
                    "memberName": "supply",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16721,
                    "src": "7301:24:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 17119,
                  "id": 17124,
                  "nodeType": "Return",
                  "src": "7294:31:81"
                }
              ]
            },
            "documentation": {
              "id": 17113,
              "nodeType": "StructuredDocumentation",
              "src": "7053:161:81",
              "text": " @dev Fetch the remaining amount allowed for a swap token.\n @param token Address of swap token.\n @return amount of swaps remaining."
            },
            "functionSelector": "ab32dbb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapSupply",
            "nameLocation": "7228:10:81",
            "parameters": {
              "id": 17116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17115,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7247:5:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17126,
                  "src": "7239:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7239:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7238:15:81"
            },
            "returnParameters": {
              "id": 17119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17126,
                  "src": "7275:7:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7275:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7274:9:81"
            },
            "scope": 17237,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17206,
            "nodeType": "FunctionDefinition",
            "src": "7484:687:81",
            "body": {
              "id": 17205,
              "nodeType": "Block",
              "src": "7536:635:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 17136,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17129,
                            "src": "7565:5:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17135,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17223,
                          "src": "7554:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 17137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7554:17:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f74206120636f6e74726163742e",
                        "id": 17138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7573:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee340fba1b4c7192bd5dfb879232df43762c487de65079751851ef3bdc40e308",
                          "typeString": "literal_string \"Token is not a contract.\""
                        },
                        "value": "Token is not a contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee340fba1b4c7192bd5dfb879232df43762c487de65079751851ef3bdc40e308",
                          "typeString": "literal_string \"Token is not a contract.\""
                        }
                      ],
                      "id": 17134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7546:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7546:54:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17140,
                  "nodeType": "ExpressionStatement",
                  "src": "7546:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 17142,
                              "name": "swapTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16727,
                              "src": "7618:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                              }
                            },
                            "id": 17144,
                            "indexExpression": {
                              "id": 17143,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17129,
                              "src": "7629:5:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7618:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                              "typeString": "struct BridgeToken.SwapToken storage ref"
                            }
                          },
                          "id": 17145,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7636:13:81",
                          "memberName": "tokenContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16719,
                          "src": "7618:31:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7661:1:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7653:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7653:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7653:10:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7618:45:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020746f6b656e206973206e6f74206120636f6e74726163742e",
                        "id": 17151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7665:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd0704970159de00957960bde429dd2af6ac97b776b9c4fea3dfc9baf5e52c05",
                          "typeString": "literal_string \"Swap token is not a contract.\""
                        },
                        "value": "Swap token is not a contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd0704970159de00957960bde429dd2af6ac97b776b9c4fea3dfc9baf5e52c05",
                          "typeString": "literal_string \"Swap token is not a contract.\""
                        }
                      ],
                      "id": 17141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7610:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7610:87:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17153,
                  "nodeType": "ExpressionStatement",
                  "src": "7610:87:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 17160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17155,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17131,
                          "src": "7715:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 17156,
                              "name": "swapTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16727,
                              "src": "7725:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                                "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                              }
                            },
                            "id": 17158,
                            "indexExpression": {
                              "id": 17157,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17129,
                              "src": "7736:5:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7725:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                              "typeString": "struct BridgeToken.SwapToken storage ref"
                            }
                          },
                          "id": 17159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7743:6:81",
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16721,
                          "src": "7725:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7715:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e74206973206d6f7265207468616e20737570706c792e",
                        "id": 17161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7751:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53aeeada353d4267a2ac2ed0982a7fd501c98a1df926f527e855f97a4ffc1c2c",
                          "typeString": "literal_string \"Swap amount is more than supply.\""
                        },
                        "value": "Swap amount is more than supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53aeeada353d4267a2ac2ed0982a7fd501c98a1df926f527e855f97a4ffc1c2c",
                          "typeString": "literal_string \"Swap amount is more than supply.\""
                        }
                      ],
                      "id": 17154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7707:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7707:79:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17163,
                  "nodeType": "ExpressionStatement",
                  "src": "7707:79:81"
                },
                {
                  "expression": {
                    "id": 17174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 17164,
                          "name": "swapTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16727,
                          "src": "7840:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                            "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                          }
                        },
                        "id": 17166,
                        "indexExpression": {
                          "id": 17165,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17129,
                          "src": "7851:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7840:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                          "typeString": "struct BridgeToken.SwapToken storage ref"
                        }
                      },
                      "id": 17167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7858:6:81",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16721,
                      "src": "7840:24:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 17173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 17168,
                            "name": "swapTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16727,
                            "src": "7867:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                              "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                            }
                          },
                          "id": 17170,
                          "indexExpression": {
                            "id": 17169,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17129,
                            "src": "7878:5:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7867:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                            "typeString": "struct BridgeToken.SwapToken storage ref"
                          }
                        },
                        "id": 17171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7885:6:81",
                        "memberName": "supply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16721,
                        "src": "7867:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 17172,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17131,
                        "src": "7894:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7867:33:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7840:60:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17175,
                  "nodeType": "ExpressionStatement",
                  "src": "7840:60:81"
                },
                {
                  "assignments": [
                    17178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17178,
                      "mutability": "mutable",
                      "name": "swapToken",
                      "nameLocation": "7956:9:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 17205,
                      "src": "7942:23:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Burnable_$1100",
                        "typeString": "contract ERC20Burnable"
                      },
                      "typeName": {
                        "id": 17177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 17176,
                          "name": "ERC20Burnable",
                          "nameLocations": [
                            "7942:13:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1100,
                          "src": "7942:13:81"
                        },
                        "referencedDeclaration": 1100,
                        "src": "7942:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$1100",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17185,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 17180,
                            "name": "swapTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16727,
                            "src": "7982:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SwapToken_$16722_storage_$",
                              "typeString": "mapping(address => struct BridgeToken.SwapToken storage ref)"
                            }
                          },
                          "id": 17182,
                          "indexExpression": {
                            "id": 17181,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17129,
                            "src": "7993:5:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7982:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapToken_$16722_storage",
                            "typeString": "struct BridgeToken.SwapToken storage ref"
                          }
                        },
                        "id": 17183,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8000:13:81",
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16719,
                        "src": "7982:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17179,
                      "name": "ERC20Burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "7968:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$1100_$",
                        "typeString": "type(contract ERC20Burnable)"
                      }
                    },
                    "id": 17184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7968:46:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Burnable_$1100",
                      "typeString": "contract ERC20Burnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7942:72:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8043:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8047:6:81",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8043:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17191,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17131,
                        "src": "8055:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 17186,
                        "name": "swapToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17178,
                        "src": "8024:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$1100",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 17188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8034:8:81",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1099,
                      "src": "8024:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 17192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8024:38:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17193,
                  "nodeType": "ExpressionStatement",
                  "src": "8024:38:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8110:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8114:6:81",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8110:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17197,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17131,
                        "src": "8122:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17194,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "8104:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8104:25:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17199,
                  "nodeType": "ExpressionStatement",
                  "src": "8104:25:81"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17201,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17129,
                        "src": "8150:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17202,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17131,
                        "src": "8157:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17200,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16775,
                      "src": "8145:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8145:19:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17204,
                  "nodeType": "EmitStatement",
                  "src": "8140:24:81"
                }
              ]
            },
            "documentation": {
              "id": 17127,
              "nodeType": "StructuredDocumentation",
              "src": "7338:141:81",
              "text": " @dev Perform Swap.\n @param token Address of token to be swapped.\n @param amount Amount of token to be swapped."
            },
            "functionSelector": "d004f0f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "7493:4:81",
            "parameters": {
              "id": 17132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17129,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7506:5:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17206,
                  "src": "7498:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7498:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17131,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7521:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17206,
                  "src": "7513:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7513:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7497:31:81"
            },
            "returnParameters": {
              "id": 17133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7536:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17223,
            "nodeType": "FunctionDefinition",
            "src": "8306:197:81",
            "body": {
              "id": 17222,
              "nodeType": "Block",
              "src": "8376:127:81",
              "statements": [
                {
                  "assignments": [
                    17215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17215,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "8394:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 17222,
                      "src": "8386:14:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8386:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17216,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8386:14:81"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8419:51:81",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8433:27:81",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "8455:4:81"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "8443:11:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8443:17:81"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8433:6:81"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 17209,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8455:4:81",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17215,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8433:6:81",
                      "valueSize": 1
                    }
                  ],
                  "id": 17217,
                  "nodeType": "InlineAssembly",
                  "src": "8410:60:81"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17218,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17215,
                      "src": "8486:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 17219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8495:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8486:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 17213,
                  "id": 17221,
                  "nodeType": "Return",
                  "src": "8479:17:81"
                }
              ]
            },
            "documentation": {
              "id": 17207,
              "nodeType": "StructuredDocumentation",
              "src": "8177:124:81",
              "text": " @dev Check if provided address is a contract.\n @param addr Address to check.\n @return hasCode"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "8315:10:81",
            "parameters": {
              "id": 17210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17209,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8334:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17223,
                  "src": "8326:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8326:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8325:14:81"
            },
            "returnParameters": {
              "id": 17213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17212,
                  "mutability": "mutable",
                  "name": "hasCode",
                  "nameLocation": "8367:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17223,
                  "src": "8362:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17211,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8362:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8361:14:81"
            },
            "scope": 17237,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 17236,
            "nodeType": "FunctionDefinition",
            "src": "8555:87:81",
            "body": {
              "id": 17235,
              "nodeType": "Block",
              "src": "8606:36:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17231,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17225,
                        "src": "8622:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17232,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17227,
                        "src": "8627:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17230,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "8616:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8616:19:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17234,
                  "nodeType": "ExpressionStatement",
                  "src": "8616:19:81"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "8564:4:81",
            "parameters": {
              "id": 17228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17225,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8577:3:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17236,
                  "src": "8569:11:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8569:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17227,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8590:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 17236,
                  "src": "8582:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8582:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8568:30:81"
            },
            "returnParameters": {
              "id": 17229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8606:0:81"
            },
            "scope": 17237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16702,
              "name": "ERC20Burnable",
              "nameLocations": [
                "1010:13:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1100,
              "src": "1010:13:81"
            },
            "id": 16703,
            "nodeType": "InheritanceSpecifier",
            "src": "1010:13:81"
          }
        ],
        "canonicalName": "BridgeToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          17237,
          1100,
          978,
          1125,
          1056,
          1147
        ],
        "name": "BridgeToken",
        "nameLocation": "995:11:81",
        "scope": 17238,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 81
}