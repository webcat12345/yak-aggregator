{
  "address": "0xc80f61d1bdAbD8f5285117e1558fDDf8C64870FE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "a",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "b",
          "type": "bytes"
        }
      ],
      "name": "mergeBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "c",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x8ebab29598a6e9b72f4f1db9cbfa9581f9412d4f6ebe8dba81a0f6263d291124",
  "receipt": {
    "to": null,
    "from": "0xd22044706DeA3c342f68396bEDBCf6a2536d951D",
    "contractAddress": "0xc80f61d1bdAbD8f5285117e1558fDDf8C64870FE",
    "transactionIndex": 10,
    "gasUsed": "210470",
    "logsBloom": "0x
    "blockHash": "0x7bcca568e4b23ed896e44e0e470ea0e8153eb90c2bf5676cba7d129f9b97eaeb",
    "transactionHash": "0x8ebab29598a6e9b72f4f1db9cbfa9581f9412d4f6ebe8dba81a0f6263d291124",
    "logs": [],
    "blockNumber": 1616877,
    "cumulativeGasUsed": "1398888",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "f3797818a37fb82d775750768bfe50df",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"a\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"b\",\"type\":\"bytes\"}],\"name\":\"mergeBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"c\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/lib/BytesManipulation.sol\":\"BytesManipulation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"src/contracts/lib/BytesManipulation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./BytesToTypes.sol\\\";\\n\\nlibrary BytesManipulation {\\n    function toBytes(uint256 x) internal pure returns (bytes memory b) {\\n        b = new bytes(32);\\n        assembly {\\n            mstore(add(b, 32), x)\\n        }\\n    }\\n\\n    function toBytes(address x) internal pure returns (bytes memory b) {\\n        b = new bytes(32);\\n        assembly {\\n            mstore(add(b, 32), x)\\n        }\\n    }\\n\\n    function mergeBytes(bytes memory a, bytes memory b) public pure returns (bytes memory c) {\\n        // From https://ethereum.stackexchange.com/a/40456\\n        uint256 alen = a.length;\\n        uint256 totallen = alen + b.length;\\n        uint256 loopsa = (a.length + 31) / 32;\\n        uint256 loopsb = (b.length + 31) / 32;\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(m, totallen)\\n            for {\\n                let i := 0\\n            } lt(i, loopsa) {\\n                i := add(1, i)\\n            } {\\n                mstore(add(m, mul(32, add(1, i))), mload(add(a, mul(32, add(1, i)))))\\n            }\\n            for {\\n                let i := 0\\n            } lt(i, loopsb) {\\n                i := add(1, i)\\n            } {\\n                mstore(add(m, add(mul(32, add(1, i)), alen)), mload(add(b, mul(32, add(1, i)))))\\n            }\\n            mstore(0x40, add(m, add(32, totallen)))\\n            c := m\\n        }\\n    }\\n\\n    function bytesToAddress(uint256 _offst, bytes memory _input) internal pure returns (address) {\\n        return BytesToTypes.bytesToAddress(_offst, _input);\\n    }\\n\\n    function bytesToUint256(uint256 _offst, bytes memory _input) internal pure returns (uint256) {\\n        return BytesToTypes.bytesToUint256(_offst, _input);\\n    }\\n}\\n\",\"keccak256\":\"0x13a69a31dedc5d312e60a51909fdac4deb670142c9ee660e82eea5e2c37dfb95\",\"license\":\"MIT\"},\"src/contracts/lib/BytesToTypes.sol\":{\"content\":\"// From https://github.com/pouladzade/Seriality/blob/master/src/BytesToTypes.sol (Licensed under Apache2.0)\\n\\n// SPDX-License-Identifier: Apache2.0\\npragma solidity ^0.8.0;\\n\\nlibrary BytesToTypes {\\n    function bytesToAddress(uint256 _offst, bytes memory _input) internal pure returns (address _output) {\\n        assembly {\\n            _output := mload(add(_input, _offst))\\n        }\\n    }\\n\\n    function bytesToUint256(uint256 _offst, bytes memory _input) internal pure returns (uint256 _output) {\\n        assembly {\\n            _output := mload(add(_input, _offst))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xeaa061ffaf163964421ec6cdd5d8c767639e3a2a5453ff76e43376ee4bafd5c4\",\"license\":\"Apache2.0\"}},\"version\":1}",
  "bytecode": "0x6102d761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80632f9680f51461003a575b600080fd5b61004d610048366004610193565b610063565b60405161005a91906101f4565b60405180910390f35b81518151606091906000906100789083610247565b9050600060208651601f61008c9190610247565b610096919061026b565b9050600060208651601f6100aa9190610247565b6100b4919061026b565b905060405183815260005b838110156100db576001016020810289810151908301526100bf565b5060005b828110156100fd5760010160208102888101519087018301526100df565b50928301602001604052509095945050505050565b600082601f830112610122578081fd5b813567ffffffffffffffff8082111561013d5761013d61028b565b604051601f8301601f1916810160200182811182821017156101615761016161028b565b604052828152848301602001861015610178578384fd5b82602086016020830137918201602001929092529392505050565b600080604083850312156101a5578182fd5b823567ffffffffffffffff808211156101bc578384fd5b6101c886838701610112565b935060208501359150808211156101dd578283fd5b506101ea85828601610112565b9150509250929050565b6000602080835283518082850152825b8181101561022057858101830151858201604001528201610204565b818111156102315783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561026657634e487b7160e01b81526011600452602481fd5b500190565b60008261028657634e487b7160e01b81526012600452602481fd5b500490565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201ee0bc8015f6b0db4e87eba26d2b78955d24ebf524bc221d0eeb1740616f4f8464736f6c63430008000033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80632f9680f51461003a575b600080fd5b61004d610048366004610193565b610063565b60405161005a91906101f4565b60405180910390f35b81518151606091906000906100789083610247565b9050600060208651601f61008c9190610247565b610096919061026b565b9050600060208651601f6100aa9190610247565b6100b4919061026b565b905060405183815260005b838110156100db576001016020810289810151908301526100bf565b5060005b828110156100fd5760010160208102888101519087018301526100df565b50928301602001604052509095945050505050565b600082601f830112610122578081fd5b813567ffffffffffffffff8082111561013d5761013d61028b565b604051601f8301601f1916810160200182811182821017156101615761016161028b565b604052828152848301602001861015610178578384fd5b82602086016020830137918201602001929092529392505050565b600080604083850312156101a5578182fd5b823567ffffffffffffffff808211156101bc578384fd5b6101c886838701610112565b935060208501359150808211156101dd578283fd5b506101ea85828601610112565b9150509250929050565b6000602080835283518082850152825b8181101561022057858101830151858201604001528201610204565b818111156102315783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561026657634e487b7160e01b81526011600452602481fd5b500190565b60008261028657634e487b7160e01b81526012600452602481fd5b500490565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201ee0bc8015f6b0db4e87eba26d2b78955d24ebf524bc221d0eeb1740616f4f8464736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}